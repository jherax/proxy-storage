{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///proxy-storage.min.js","webpack:///webpack/bootstrap 165041cd18384dda44dd","webpack:///./src/utils.js","webpack:///./src/is-available.js","webpack:///./src/web-storage.js","webpack:///./src/cookie-storage.js","webpack:///./src/memory-storage.js","webpack:///./src/proxy-mechanism.js","webpack:///./src/proxy-storage.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","isObject","toString","alterDate","options","arguments","length","undefined","opt","assign","date","Date","minutes","setMinutes","getMinutes","hours","setHours","getHours","days","setDate","getDate","months","setMonth","getMonth","years","setFullYear","getFullYear","setProperty","obj","descriptor","writable","checkEmpty","key","Error","isAvailable","localStorage","sessionStorage","cookieStorage","memoryStorage","_classCallCheck","instance","Constructor","TypeError","executeInterceptors","command","_len","args","Array","_key","shift","_typeof","JSON","parse","stringify","_interceptors","reduce","val","action","transformed","concat","tryParse","parsed","e","copyKeys","storage","keys","forEach","storageAvailable","storageType","webStorageSettings","console","warn","default","proxy","_createClass","defineProperties","target","props","protoProps","staticProps","Symbol","iterator","constructor","_proxyMechanism","_utils","_isAvailable","_instances","setItem","getItem","removeItem","clear","bannedKeys","WebStorage","cachedInstance","__storage__","test","v","_this","push","buildExpirationString","expires","toUTCString","buildMetadataFor","data","findCookie","cookie","nameEQ","trim","indexOf","api","path","$cookie","metadata","domain","encodeURIComponent","set","split","find","substring","decodeURIComponent","indexEQ","initialize","index","document","getStoreFromWindow","store","window","self","setStoreToWindow","hashtable","_interopRequireDefault","initApi","prop","_cookieStorage","_cookieStorage2","_memoryStorage","_memoryStorage2","isStorageAvailable","storageObj","_webStorage","configStorage","init","some","_webStorage2"],"mappings":"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","file":"proxy-storage.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"proxyStorage\"] = factory();\n\telse\n\t\troot[\"proxyStorage\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"proxyStorage\"] = factory();\n\telse\n\t\troot[\"proxyStorage\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 6);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isObject = isObject;\nexports.alterDate = alterDate;\nexports.setProperty = setProperty;\nexports.checkEmpty = checkEmpty;\n/**\n * Determines whether a value is a plain object.\n *\n * @param  {any} value: the object to test\n * @return {boolean}\n */\nfunction isObject(value) {\n  return Object.prototype.toString.call(value) === '[object Object]';\n}\n\n/**\n * Adds or subtracts date portions to the given date and returns the new date.\n *\n * @see https://gist.github.com/jherax/bbc43e479a492cc9cbfc7ccc20c53cd2\n *\n * @param  {object} options: It contains the date parts to add or remove, and can have the following properties:\n *         - {Date} date: if provided, this date will be affected, otherwise the current date will be used.\n *         - {number} minutes: minutes to add/subtract\n *         - {number} hours: hours to add/subtract\n *         - {number} days: days to add/subtract\n *         - {number} months: months to add/subtract\n *         - {number} years: years to add/subtract\n * @return {Date}\n */\nfunction alterDate() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var opt = Object.assign({}, options);\n  var d = opt.date instanceof Date ? opt.date : new Date();\n  if (+opt.minutes) d.setMinutes(d.getMinutes() + opt.minutes);\n  if (+opt.hours) d.setHours(d.getHours() + opt.hours);\n  if (+opt.days) d.setDate(d.getDate() + opt.days);\n  if (+opt.months) d.setMonth(d.getMonth() + opt.months);\n  if (+opt.years) d.setFullYear(d.getFullYear() + opt.years);\n  return d;\n}\n\n/**\n * Creates a non-enumerable read-only property.\n *\n * @param  {object} obj: the object to add the property\n * @param  {string} name: the name of the property\n * @param  {any} value: the value of the property\n * @return {void}\n */\nfunction setProperty(obj, name, value) {\n  var descriptor = {\n    configurable: false,\n    enumerable: false,\n    writable: false\n  };\n  if (typeof value !== 'undefined') {\n    descriptor.value = value;\n  }\n  Object.defineProperty(obj, name, descriptor);\n}\n\n/**\n * Validates if the key is not empty.\n * (null, undefined or empty string)\n *\n * @param  {string} key: keyname of an element in the storage mechanism\n * @return {void}\n */\nfunction checkEmpty(key) {\n  if (key == null || key === '') {\n    throw new Error('The key provided can not be empty');\n  }\n}\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * @public\n *\n * Used to determine which storage mechanisms are available.\n *\n * @type {object}\n */\nvar isAvailable = exports.isAvailable = {\n  localStorage: false,\n  sessionStorage: false,\n  cookieStorage: false,\n  memoryStorage: true };\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.proxy = exports.webStorageSettings = exports.default = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _proxyMechanism = __webpack_require__(5);\n\nvar _utils = __webpack_require__(0);\n\nvar _isAvailable = __webpack_require__(1);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * @private\n *\n * Keeps WebStorage instances by type as singletons.\n *\n * @type {object}\n */\nvar _instances = {};\n\n/**\n * @private\n *\n * Stores the interceptors for WebStorage methods.\n *\n * @type {object}\n */\nvar _interceptors = {\n  setItem: [],\n  getItem: [],\n  removeItem: [],\n  clear: []\n};\n\n/**\n * @private\n *\n * Keys not allowed for cookies.\n *\n * @type {RegExp}\n */\nvar bannedKeys = /^(?:expires|max-age|path|domain|secure)$/i;\n\n/**\n * @private\n *\n * Executes the interceptors for a WebStorage method and\n * allows the transformation in chain of the value passed through.\n *\n * @param  {string} command: name of the method to intercept\n * @return {any}\n */\nfunction executeInterceptors(command) {\n  for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  var key = args.shift();\n  var value = args.shift();\n  if (value && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object') {\n    // clone the object to prevent mutations\n    value = JSON.parse(JSON.stringify(value));\n  }\n  return _interceptors[command].reduce(function (val, action) {\n    var transformed = action.apply(undefined, [key, val].concat(args));\n    if (transformed == null) return val;\n    return transformed;\n  }, value);\n}\n\n/**\n * @private\n *\n * Try to parse a value\n *\n * @param  {string} value: the value to parse\n * @return {any}\n */\nfunction tryParse(value) {\n  var parsed = void 0;\n  try {\n    parsed = JSON.parse(value);\n  } catch (e) {\n    parsed = value;\n  }\n  return parsed;\n}\n\n/**\n * @private\n *\n * Copies all existing keys in the WebStorage instance.\n *\n * @param  {WebStorage} instance: the instance to where copy the keys\n * @param  {object} storage: the storage mechanism\n * @return {void}\n */\nfunction copyKeys(instance, storage) {\n  Object.keys(storage).forEach(function (key) {\n    instance[key] = tryParse(storage[key]);\n  });\n}\n\n/**\n * @public\n *\n * Allows to validate if a storage mechanism is valid\n *\n * @type {object}\n */\nvar webStorageSettings = {\n  default: null,\n  isAvailable: _isAvailable.isAvailable\n};\n\n/**\n * @private\n *\n * Validates if the storage mechanism is available and can be used safely.\n *\n * @param  {string} storageType: it can be \"localStorage\", \"sessionStorage\", \"cookieStorage\", or \"memoryStorage\"\n * @return {string}\n */\nfunction storageAvailable(storageType) {\n  if (webStorageSettings.isAvailable[storageType]) return storageType;\n  console.warn(storageType + ' is not available. Falling back to ' + webStorageSettings.default); // eslint-disable-line\n  return webStorageSettings.default;\n}\n\n/**\n * @public\n *\n * Implementation of the Web Storage interface.\n * It saves and retrieves values as JSON.\n *\n * @see\n * https://developer.mozilla.org/en-US/docs/Web/API/Storage\n *\n * @type {class}\n */\n\nvar WebStorage = function () {\n\n  /**\n   * Creates an instance of WebStorage.\n   *\n   * @param {string} storageType: it can be \"localStorage\", \"sessionStorage\", \"cookieStorage\", or \"memoryStorage\"\n   *\n   * @memberOf WebStorage\n   */\n  function WebStorage(storageType) {\n    _classCallCheck(this, WebStorage);\n\n    if (!Object.prototype.hasOwnProperty.call(_proxyMechanism.proxy, storageType)) {\n      throw new Error('Storage type \"' + storageType + '\" is not valid');\n    }\n    // gets the requested storage mechanism\n    var storage = _proxyMechanism.proxy[storageType];\n    // if the storage is not available, sets the default\n    storageType = storageAvailable(storageType);\n    // keeps only one instance by storageType (singleton)\n    var cachedInstance = _instances[storageType];\n    if (cachedInstance) {\n      copyKeys(cachedInstance, storage);\n      return cachedInstance;\n    }\n    (0, _utils.setProperty)(this, '__storage__', storageType);\n    // copies all existing keys in the storage mechanism\n    copyKeys(this, storage);\n    _instances[storageType] = this;\n  }\n\n  /**\n   * Stores a value given a key name.\n   *\n   * @param  {string} key: keyname of the storage\n   * @param  {any} value: data to save in the storage\n   * @param  {object} options: additional options for cookieStorage\n   * @return {void}\n   *\n   * @memberOf WebStorage\n   */\n\n\n  _createClass(WebStorage, [{\n    key: 'setItem',\n    value: function setItem(key, value, options) {\n      (0, _utils.checkEmpty)(key);\n      var storageType = this.__storage__;\n      if (storageType === 'cookieStorage' && bannedKeys.test(key)) {\n        throw new Error('The key is a reserved word, therefore not allowed');\n      }\n      var v = executeInterceptors('setItem', key, value, options);\n      if (v !== undefined) value = v;\n      this[key] = value;\n      // prevents converting strings to JSON to avoid extra quotes\n      if (typeof value !== 'string') value = JSON.stringify(value);\n      _proxyMechanism.proxy[storageType].setItem(key, value, options);\n      // checks if the cookie was created, or delete it if the domain or path are not valid\n      if (storageType === 'cookieStorage' && _proxyMechanism.proxy[storageType].getItem(key) === null) {\n        delete this[key];\n      }\n    }\n\n    /**\n     * Retrieves a value by its key name.\n     *\n     * @param  {string} key: keyname of the storage\n     * @return {void}\n     *\n     * @memberOf WebStorage\n     */\n\n  }, {\n    key: 'getItem',\n    value: function getItem(key) {\n      (0, _utils.checkEmpty)(key);\n      var value = _proxyMechanism.proxy[this.__storage__].getItem(key);\n      if (value == null) {\n        delete this[key];\n        value = null;\n      } else {\n        value = tryParse(value);\n        this[key] = value;\n      }\n      var v = executeInterceptors('getItem', key, value);\n      if (v !== undefined) value = v;\n      return value;\n    }\n\n    /**\n     * Deletes a key from the storage.\n     *\n     * @param  {string} key: keyname of the storage\n     * @param  {object} options: additional options for cookieStorage\n     * @return {void}\n     *\n     * @memberOf WebStorage\n     */\n\n  }, {\n    key: 'removeItem',\n    value: function removeItem(key, options) {\n      (0, _utils.checkEmpty)(key);\n      executeInterceptors('removeItem', key, options);\n      delete this[key];\n      _proxyMechanism.proxy[this.__storage__].removeItem(key, options);\n    }\n\n    /**\n     * Removes all keys from the storage.\n     *\n     * @return {void}\n     *\n     * @memberOf WebStorage\n     */\n\n  }, {\n    key: 'clear',\n    value: function clear() {\n      var _this = this;\n\n      executeInterceptors('clear');\n      Object.keys(this).forEach(function (key) {\n        delete _this[key];\n      }, this);\n      _proxyMechanism.proxy[this.__storage__].clear();\n    }\n\n    /**\n     * Gets the number of data items stored in the Storage object.\n     *\n     * @readonly\n     *\n     * @memberOf WebStorage\n     */\n\n  }, {\n    key: 'length',\n    get: function get() {\n      return Object.keys(this).length;\n    }\n\n    /**\n     * Adds an interceptor to a WebStorage method.\n     *\n     * @param  {string} command: name of the API method to intercept\n     * @param  {function} action: callback executed when the API method is called\n     * @return {void}\n     *\n     * @memberOf WebStorage\n     */\n\n  }], [{\n    key: 'interceptors',\n    value: function interceptors(command, action) {\n      if (command in _interceptors && typeof action === 'function') {\n        _interceptors[command].push(action);\n      }\n    }\n  }]);\n\n  return WebStorage;\n}();\n\n// @public API\n\n\nexports.default = WebStorage;\nexports.webStorageSettings = webStorageSettings;\nexports.proxy = _proxyMechanism.proxy;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = cookieStorage;\n\nvar _utils = __webpack_require__(0);\n\n/**\n * @private\n *\n * Proxy for the default cookie storage associated with the current document.\n *\n * @see\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/cookie\n *\n * @type {object}\n */\nvar $cookie = {\n  get: function get() {\n    return document.cookie;\n  },\n  set: function set(value) {\n    document.cookie = value;\n  },\n  data: {} };\n\n/**\n * @private\n *\n * Builds the expiration part for the cookie.\n *\n * @see utils.alterDate(options)\n *\n * @param  {Date|object} date: the expiration date\n * @return {string}\n */\n/* eslint-disable no-invalid-this */\nfunction buildExpirationString(date) {\n  var expires = date instanceof Date ? (0, _utils.alterDate)({ date: date }) : (0, _utils.alterDate)(date);\n  return expires.toUTCString();\n}\n\n/**\n * @private\n *\n * Builds the string for the cookie's metadata.\n *\n * @param  {string} key: name of the metadata\n * @param  {object} data: metadata of the cookie\n * @return {string}\n */\nfunction buildMetadataFor(key, data) {\n  if (!data[key]) return '';\n  return '; ' + key + '=' + data[key];\n}\n\n/**\n * @private\n *\n * Finds an element in the array.\n *\n * @param  {string} cookie: key=value\n * @return {boolean}\n */\nfunction findCookie(cookie) {\n  var nameEQ = this.toString();\n  // prevent leading spaces before the key\n  return cookie.trim().indexOf(nameEQ) === 0;\n}\n\n/**\n * @public\n *\n * Create, read, and delete elements from document cookies\n * and implements the Web Storage interface.\n *\n * @return {object}\n */\nfunction cookieStorage() {\n  var api = {\n    setItem: function setItem(key, value, options) {\n      options = Object.assign({ path: '/' }, options);\n      // keep track of the metadata associated to the cookie\n      $cookie.data[key] = { path: options.path };\n      var metadata = $cookie.data[key];\n      if ((0, _utils.isObject)(options.expires) || options.expires instanceof Date) {\n        metadata.expires = buildExpirationString(options.expires);\n      }\n      if (options.domain && typeof options.domain === 'string') {\n        metadata.domain = options.domain.trim();\n      }\n      var expires = buildMetadataFor('expires', metadata);\n      var domain = buildMetadataFor('domain', metadata);\n      var path = buildMetadataFor('path', metadata);\n      var cookie = key + '=' + encodeURIComponent(value) + expires + domain + path;\n      $cookie.set(cookie);\n    },\n    getItem: function getItem(key) {\n      var value = null;\n      var nameEQ = key + '=';\n      var cookie = $cookie.get().split(';').find(findCookie, nameEQ);\n      if (cookie) {\n        // prevent leading spaces before the key name\n        value = cookie.trim().substring(nameEQ.length, cookie.length);\n        value = decodeURIComponent(value);\n      }\n      if (value === null) delete $cookie.data[key];\n      return value;\n    },\n    removeItem: function removeItem(key, options) {\n      var metadata = Object.assign({}, $cookie.data[key], options);\n      metadata.expires = { days: -1 };\n      api.setItem(key, '', metadata);\n      delete $cookie.data[key];\n    },\n    clear: function clear() {\n      var key = void 0,\n          indexEQ = void 0; // eslint-disable-line\n      $cookie.get().split(';').forEach(function (cookie) {\n        indexEQ = cookie.indexOf('=');\n        if (indexEQ > -1) {\n          key = cookie.substring(0, indexEQ);\n          // prevent leading spaces before the key\n          api.removeItem(key.trim());\n        }\n      });\n    },\n\n\n    // this method will be removed after being invoked\n    // because is not part of the Web Storage interface\n    initialize: function initialize() {\n      $cookie.get().split(';').forEach(function (cookie) {\n        var index = cookie.indexOf('=');\n        var key = cookie.substring(0, index).trim();\n        var value = cookie.substring(index + 1).trim();\n        // copies all existing elements in the storage\n        if (key) api[key] = decodeURIComponent(value);\n      });\n    }\n  };\n  return api;\n}\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports.default = memoryStorage;\n/**\n * @private\n *\n * Gets the hashtable-store from the current window.\n *\n * @return {object}\n */\nfunction getStoreFromWindow() {\n  // eslint-disable-line\n  try {\n    var store = JSON.parse(window.self.name);\n    if (store && (typeof store === 'undefined' ? 'undefined' : _typeof(store)) === 'object') return store;\n  } catch (e) {\n    return {};\n  }\n}\n\n/**\n * @private\n *\n * Saves the hashtable-store in the current window.\n *\n * @param  {object} hashtable: {key,value} pairs stored in memoryStorage\n * @return {void}\n */\nfunction setStoreToWindow(hashtable) {\n  var store = JSON.stringify(hashtable);\n  window.self.name = store;\n}\n\n/**\n * @public\n *\n * Create, read, and delete elements from memory store and\n * implements the Web Storage interface. It also adds a hack\n * to persist the store in session for the current browser-tab.\n *\n * @return {object}\n */\nfunction memoryStorage() {\n  var hashtable = getStoreFromWindow();\n  var api = {\n    setItem: function setItem(key, value) {\n      hashtable[key] = value;\n      setStoreToWindow(hashtable);\n    },\n    getItem: function getItem(key) {\n      var value = hashtable[key];\n      return value === undefined ? null : value;\n    },\n    removeItem: function removeItem(key) {\n      delete hashtable[key];\n      setStoreToWindow(hashtable);\n    },\n    clear: function clear() {\n      Object.keys(hashtable).forEach(function (key) {\n        return delete hashtable[key];\n      });\n      setStoreToWindow(hashtable);\n    },\n\n    // this method will be removed after being invoked\n    // because is not part of the Web Storage interface\n    initialize: function initialize() {\n      // copies all existing elements in the storage\n      Object.assign(api, hashtable);\n    }\n  };\n  return api;\n}\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.proxy = undefined;\n\nvar _cookieStorage = __webpack_require__(3);\n\nvar _cookieStorage2 = _interopRequireDefault(_cookieStorage);\n\nvar _memoryStorage = __webpack_require__(4);\n\nvar _memoryStorage2 = _interopRequireDefault(_memoryStorage);\n\nvar _utils = __webpack_require__(0);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @private\n *\n * Adds the current elements in the storage object.\n *\n * @param  {object} api: the storage mechanism to initialize\n * @return {object}\n */\nfunction initApi(api) {\n  if (!api.initialize) return api;\n  // sets read-only and non-enumerable properties\n  for (var prop in api) {\n    // eslint-disable-line\n    if (prop !== 'initialize') {\n      (0, _utils.setProperty)(api, prop);\n    }\n  }\n  api.initialize();\n  // this method is removed after being invoked\n  // because is not part of the Web Storage interface\n  delete api.initialize;\n  return api;\n}\n\n/**\n * @public\n *\n * Proxy for storage mechanisms.\n * All members implement the Web Storage interface.\n *\n * @see\n * https://developer.mozilla.org/en-US/docs/Web/API/Storage\n *\n * @type {object}\n */\nvar proxy = exports.proxy = {\n  localStorage: window.localStorage,\n  sessionStorage: window.sessionStorage,\n  cookieStorage: initApi((0, _cookieStorage2.default)()),\n  memoryStorage: initApi((0, _memoryStorage2.default)())\n};\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isAvailable = exports.configStorage = exports.WebStorage = exports.default = undefined;\n\nvar _webStorage = __webpack_require__(2);\n\nvar _webStorage2 = _interopRequireDefault(_webStorage);\n\nvar _isAvailable = __webpack_require__(1);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @public\n *\n * Current storage mechanism.\n *\n * @type {object}\n */\n/**\n * This library uses an adapter that implements the Web Storage interface,\n * which is very useful to deal with the lack of compatibility between\n * document.cookie and localStorage and sessionStorage.\n *\n * It also provides a memoryStorage fallback that stores the data in memory\n * when all of above mechanisms are not available.\n *\n * Author: David Rivera\n * Github: https://github.com/jherax\n * License: \"MIT\"\n *\n * You can fork this project on github:\n * https://github.com/jherax/proxy-storage.git\n */\n\nvar storage = null;\n\n/**\n * @public\n *\n * Get/Set the storage mechanism to use by default.\n *\n * @type {object}\n */\nvar configStorage = {\n  get: function get() {\n    return storage.__storage__;\n  },\n\n\n  /**\n   * Sets the storage mechanism to use by default.\n   *\n   * @param  {string} storageType: it can be \"localStorage\", \"sessionStorage\", \"cookieStorage\", or \"memoryStorage\"\n   * @return {void}\n   */\n  set: function set(storageType) {\n    if (!Object.prototype.hasOwnProperty.call(_webStorage.proxy, storageType)) {\n      throw new Error('Storage type \"' + storageType + '\" is not valid');\n    }\n    exports.default = storage = new _webStorage2.default(storageType);\n  }\n};\n\n/**\n * @private\n *\n * Checks whether a storage mechanism is available.\n *\n * @param  {string} storageType: it can be \"localStorage\", \"sessionStorage\", \"cookieStorage\", or \"memoryStorage\"\n * @return {boolean}\n */\nfunction isStorageAvailable(storageType) {\n  var storageObj = _webStorage.proxy[storageType];\n  var data = '__proxy-storage__';\n  try {\n    storageObj.setItem(data, data);\n    storageObj.removeItem(data);\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * @private\n *\n * Sets the first or default storage available.\n *\n * @param  {string} storageType: it can be \"localStorage\", \"sessionStorage\", \"cookieStorage\", or \"memoryStorage\"\n * @return {boolean}\n */\nfunction storageAvailable(storageType) {\n  if (_isAvailable.isAvailable[storageType]) {\n    _webStorage.webStorageSettings.default = storageType;\n    configStorage.set(storageType);\n  }\n  return _isAvailable.isAvailable[storageType];\n}\n\n/**\n * @private\n *\n * Initializes the module.\n *\n * @return {void}\n */\nfunction init() {\n  _isAvailable.isAvailable.localStorage = isStorageAvailable('localStorage');\n  _isAvailable.isAvailable.sessionStorage = isStorageAvailable('sessionStorage');\n  _isAvailable.isAvailable.cookieStorage = isStorageAvailable('cookieStorage');\n  _webStorage.webStorageSettings.isAvailable = _isAvailable.isAvailable;\n  // sets the default storage mechanism available\n  Object.keys(_isAvailable.isAvailable).some(storageAvailable);\n}\n\ninit();\n\n// @public API\nexports.default = storage;\nexports.WebStorage = _webStorage2.default;\nexports.configStorage = configStorage;\nexports.isAvailable = _isAvailable.isAvailable;\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// proxy-storage.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 165041cd18384dda44dd","/**\n * Determines whether a value is a plain object.\n *\n * @param  {any} value: the object to test\n * @return {boolean}\n */\nexport function isObject(value) {\n  return Object.prototype.toString.call(value) === '[object Object]';\n}\n\n/**\n * Adds or subtracts date portions to the given date and returns the new date.\n *\n * @see https://gist.github.com/jherax/bbc43e479a492cc9cbfc7ccc20c53cd2\n *\n * @param  {object} options: It contains the date parts to add or remove, and can have the following properties:\n *         - {Date} date: if provided, this date will be affected, otherwise the current date will be used.\n *         - {number} minutes: minutes to add/subtract\n *         - {number} hours: hours to add/subtract\n *         - {number} days: days to add/subtract\n *         - {number} months: months to add/subtract\n *         - {number} years: years to add/subtract\n * @return {Date}\n */\nexport function alterDate(options = {}) {\n  const opt = Object.assign({}, options);\n  const d = opt.date instanceof Date ? opt.date : new Date();\n  if (+opt.minutes) d.setMinutes(d.getMinutes() + opt.minutes);\n  if (+opt.hours) d.setHours(d.getHours() + opt.hours);\n  if (+opt.days) d.setDate(d.getDate() + opt.days);\n  if (+opt.months) d.setMonth(d.getMonth() + opt.months);\n  if (+opt.years) d.setFullYear(d.getFullYear() + opt.years);\n  return d;\n}\n\n/**\n * Creates a non-enumerable read-only property.\n *\n * @param  {object} obj: the object to add the property\n * @param  {string} name: the name of the property\n * @param  {any} value: the value of the property\n * @return {void}\n */\nexport function setProperty(obj, name, value) {\n  const descriptor = {\n    configurable: false,\n    enumerable: false,\n    writable: false,\n  };\n  if (typeof value !== 'undefined') {\n    descriptor.value = value;\n  }\n  Object.defineProperty(obj, name, descriptor);\n}\n\n/**\n * Validates if the key is not empty.\n * (null, undefined or empty string)\n *\n * @param  {string} key: keyname of an element in the storage mechanism\n * @return {void}\n */\nexport function checkEmpty(key) {\n  if (key == null || key === '') {\n    throw new Error('The key provided can not be empty');\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils.js","/**\n * @public\n *\n * Used to determine which storage mechanisms are available.\n *\n * @type {object}\n */\nexport const isAvailable = {\n  localStorage: false,\n  sessionStorage: false,\n  cookieStorage: false,\n  memoryStorage: true, // fallback storage\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/is-available.js","import {proxy} from './proxy-mechanism';\nimport {setProperty, checkEmpty} from './utils';\nimport {isAvailable} from './is-available';\n\n/**\n * @private\n *\n * Keeps WebStorage instances by type as singletons.\n *\n * @type {object}\n */\nconst _instances = {};\n\n/**\n * @private\n *\n * Stores the interceptors for WebStorage methods.\n *\n * @type {object}\n */\nconst _interceptors = {\n  setItem: [],\n  getItem: [],\n  removeItem: [],\n  clear: [],\n};\n\n/**\n * @private\n *\n * Keys not allowed for cookies.\n *\n * @type {RegExp}\n */\nconst bannedKeys = /^(?:expires|max-age|path|domain|secure)$/i;\n\n/**\n * @private\n *\n * Executes the interceptors for a WebStorage method and\n * allows the transformation in chain of the value passed through.\n *\n * @param  {string} command: name of the method to intercept\n * @return {any}\n */\nfunction executeInterceptors(command, ...args) {\n  const key = args.shift();\n  let value = args.shift();\n  if (value && typeof value === 'object') {\n    // clone the object to prevent mutations\n    value = JSON.parse(JSON.stringify(value));\n  }\n  return _interceptors[command].reduce((val, action) => {\n    const transformed = action(key, val, ...args);\n    if (transformed == null) return val;\n    return transformed;\n  }, value);\n}\n\n/**\n * @private\n *\n * Try to parse a value\n *\n * @param  {string} value: the value to parse\n * @return {any}\n */\nfunction tryParse(value) {\n  let parsed;\n  try {\n    parsed = JSON.parse(value);\n  } catch (e) {\n    parsed = value;\n  }\n  return parsed;\n}\n\n/**\n * @private\n *\n * Copies all existing keys in the WebStorage instance.\n *\n * @param  {WebStorage} instance: the instance to where copy the keys\n * @param  {object} storage: the storage mechanism\n * @return {void}\n */\nfunction copyKeys(instance, storage) {\n  Object.keys(storage).forEach((key) => {\n    instance[key] = tryParse(storage[key]);\n  });\n}\n\n/**\n * @public\n *\n * Allows to validate if a storage mechanism is valid\n *\n * @type {object}\n */\nconst webStorageSettings = {\n  default: null,\n  isAvailable,\n};\n\n/**\n * @private\n *\n * Validates if the storage mechanism is available and can be used safely.\n *\n * @param  {string} storageType: it can be \"localStorage\", \"sessionStorage\", \"cookieStorage\", or \"memoryStorage\"\n * @return {string}\n */\nfunction storageAvailable(storageType) {\n  if (webStorageSettings.isAvailable[storageType]) return storageType;\n  console.warn(`${storageType} is not available. Falling back to ${webStorageSettings.default}`); // eslint-disable-line\n  return webStorageSettings.default;\n}\n\n/**\n * @public\n *\n * Implementation of the Web Storage interface.\n * It saves and retrieves values as JSON.\n *\n * @see\n * https://developer.mozilla.org/en-US/docs/Web/API/Storage\n *\n * @type {class}\n */\nclass WebStorage {\n\n  /**\n   * Creates an instance of WebStorage.\n   *\n   * @param {string} storageType: it can be \"localStorage\", \"sessionStorage\", \"cookieStorage\", or \"memoryStorage\"\n   *\n   * @memberOf WebStorage\n   */\n  constructor(storageType) {\n    if (!Object.prototype.hasOwnProperty.call(proxy, storageType)) {\n      throw new Error(`Storage type \"${storageType}\" is not valid`);\n    }\n    // gets the requested storage mechanism\n    const storage = proxy[storageType];\n    // if the storage is not available, sets the default\n    storageType = storageAvailable(storageType);\n    // keeps only one instance by storageType (singleton)\n    const cachedInstance = _instances[storageType];\n    if (cachedInstance) {\n      copyKeys(cachedInstance, storage);\n      return cachedInstance;\n    }\n    setProperty(this, '__storage__', storageType);\n    // copies all existing keys in the storage mechanism\n    copyKeys(this, storage);\n    _instances[storageType] = this;\n  }\n\n  /**\n   * Stores a value given a key name.\n   *\n   * @param  {string} key: keyname of the storage\n   * @param  {any} value: data to save in the storage\n   * @param  {object} options: additional options for cookieStorage\n   * @return {void}\n   *\n   * @memberOf WebStorage\n   */\n  setItem(key, value, options) {\n    checkEmpty(key);\n    const storageType = this.__storage__;\n    if (storageType === 'cookieStorage' && bannedKeys.test(key)) {\n      throw new Error('The key is a reserved word, therefore not allowed');\n    }\n    const v = executeInterceptors('setItem', key, value, options);\n    if (v !== undefined) value = v;\n    this[key] = value;\n    // prevents converting strings to JSON to avoid extra quotes\n    if (typeof value !== 'string') value = JSON.stringify(value);\n    proxy[storageType].setItem(key, value, options);\n    // checks if the cookie was created, or delete it if the domain or path are not valid\n    if (storageType === 'cookieStorage' && proxy[storageType].getItem(key) === null) {\n      delete this[key];\n    }\n  }\n\n  /**\n   * Retrieves a value by its key name.\n   *\n   * @param  {string} key: keyname of the storage\n   * @return {void}\n   *\n   * @memberOf WebStorage\n   */\n  getItem(key) {\n    checkEmpty(key);\n    let value = proxy[this.__storage__].getItem(key);\n    if (value == null) {\n      delete this[key];\n      value = null;\n    } else {\n      value = tryParse(value);\n      this[key] = value;\n    }\n    const v = executeInterceptors('getItem', key, value);\n    if (v !== undefined) value = v;\n    return value;\n  }\n\n  /**\n   * Deletes a key from the storage.\n   *\n   * @param  {string} key: keyname of the storage\n   * @param  {object} options: additional options for cookieStorage\n   * @return {void}\n   *\n   * @memberOf WebStorage\n   */\n  removeItem(key, options) {\n    checkEmpty(key);\n    executeInterceptors('removeItem', key, options);\n    delete this[key];\n    proxy[this.__storage__].removeItem(key, options);\n  }\n\n  /**\n   * Removes all keys from the storage.\n   *\n   * @return {void}\n   *\n   * @memberOf WebStorage\n   */\n  clear() {\n    executeInterceptors('clear');\n    Object.keys(this).forEach((key) => {\n      delete this[key];\n    }, this);\n    proxy[this.__storage__].clear();\n  }\n\n  /**\n   * Gets the number of data items stored in the Storage object.\n   *\n   * @readonly\n   *\n   * @memberOf WebStorage\n   */\n  get length() {\n    return Object.keys(this).length;\n  }\n\n  /**\n   * Adds an interceptor to a WebStorage method.\n   *\n   * @param  {string} command: name of the API method to intercept\n   * @param  {function} action: callback executed when the API method is called\n   * @return {void}\n   *\n   * @memberOf WebStorage\n   */\n  static interceptors(command, action) {\n    if (command in _interceptors && typeof action === 'function') {\n      _interceptors[command].push(action);\n    }\n  }\n}\n\n// @public API\nexport {WebStorage as default, webStorageSettings, proxy};\n\n\n\n// WEBPACK FOOTER //\n// ./src/web-storage.js","/* eslint-disable no-invalid-this */\nimport {alterDate, isObject} from './utils';\n\n/**\n * @private\n *\n * Proxy for the default cookie storage associated with the current document.\n *\n * @see\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/cookie\n *\n * @type {object}\n */\nconst $cookie = {\n  get: () => document.cookie,\n  set: (value) => {\n    document.cookie = value;\n  },\n  data: {}, // metadata associated to the cookies\n};\n\n/**\n * @private\n *\n * Builds the expiration part for the cookie.\n *\n * @see utils.alterDate(options)\n *\n * @param  {Date|object} date: the expiration date\n * @return {string}\n */\nfunction buildExpirationString(date) {\n  const expires = (date instanceof Date ?\n    alterDate({date}) :\n    alterDate(date)\n  );\n  return expires.toUTCString();\n}\n\n/**\n * @private\n *\n * Builds the string for the cookie's metadata.\n *\n * @param  {string} key: name of the metadata\n * @param  {object} data: metadata of the cookie\n * @return {string}\n */\nfunction buildMetadataFor(key, data) {\n  if (!data[key]) return '';\n  return `; ${key}=${data[key]}`;\n}\n\n/**\n * @private\n *\n * Finds an element in the array.\n *\n * @param  {string} cookie: key=value\n * @return {boolean}\n */\nfunction findCookie(cookie) {\n  const nameEQ = this.toString();\n  // prevent leading spaces before the key\n  return cookie.trim().indexOf(nameEQ) === 0;\n}\n\n/**\n * @public\n *\n * Create, read, and delete elements from document cookies\n * and implements the Web Storage interface.\n *\n * @return {object}\n */\nexport default function cookieStorage() {\n  const api = {\n    setItem(key, value, options) {\n      options = Object.assign({path: '/'}, options);\n      // keep track of the metadata associated to the cookie\n      $cookie.data[key] = {path: options.path};\n      const metadata = $cookie.data[key];\n      if (isObject(options.expires) || options.expires instanceof Date) {\n        metadata.expires = buildExpirationString(options.expires);\n      }\n      if (options.domain && typeof options.domain === 'string') {\n        metadata.domain = options.domain.trim();\n      }\n      const expires = buildMetadataFor('expires', metadata);\n      const domain = buildMetadataFor('domain', metadata);\n      const path = buildMetadataFor('path', metadata);\n      const cookie = `${key}=${encodeURIComponent(value)}${expires}${domain}${path}`;\n      $cookie.set(cookie);\n    },\n\n    getItem(key) {\n      let value = null;\n      const nameEQ = `${key}=`;\n      const cookie = $cookie.get().split(';').find(findCookie, nameEQ);\n      if (cookie) {\n        // prevent leading spaces before the key name\n        value = cookie.trim().substring(nameEQ.length, cookie.length);\n        value = decodeURIComponent(value);\n      }\n      if (value === null) delete $cookie.data[key];\n      return value;\n    },\n\n    removeItem(key, options) {\n      const metadata = Object.assign({}, $cookie.data[key], options);\n      metadata.expires = {days: -1};\n      api.setItem(key, '', metadata);\n      delete $cookie.data[key];\n    },\n\n    clear() {\n      let key, indexEQ; // eslint-disable-line\n      $cookie.get().split(';').forEach((cookie) => {\n        indexEQ = cookie.indexOf('=');\n        if (indexEQ > -1) {\n          key = cookie.substring(0, indexEQ);\n          // prevent leading spaces before the key\n          api.removeItem(key.trim());\n        }\n      });\n    },\n\n    // this method will be removed after being invoked\n    // because is not part of the Web Storage interface\n    initialize() {\n      $cookie.get().split(';').forEach((cookie) => {\n        const index = cookie.indexOf('=');\n        const key = cookie.substring(0, index).trim();\n        const value = cookie.substring(index + 1).trim();\n        // copies all existing elements in the storage\n        if (key) api[key] = decodeURIComponent(value);\n      });\n    },\n  };\n  return api;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/cookie-storage.js","/**\n * @private\n *\n * Gets the hashtable-store from the current window.\n *\n * @return {object}\n */\nfunction getStoreFromWindow() { // eslint-disable-line\n  try {\n    const store = JSON.parse(window.self.name);\n    if (store && typeof store === 'object') return store;\n  } catch (e) {\n    return {};\n  }\n}\n\n/**\n * @private\n *\n * Saves the hashtable-store in the current window.\n *\n * @param  {object} hashtable: {key,value} pairs stored in memoryStorage\n * @return {void}\n */\nfunction setStoreToWindow(hashtable) {\n  const store = JSON.stringify(hashtable);\n  window.self.name = store;\n}\n\n/**\n * @public\n *\n * Create, read, and delete elements from memory store and\n * implements the Web Storage interface. It also adds a hack\n * to persist the store in session for the current browser-tab.\n *\n * @return {object}\n */\nexport default function memoryStorage() {\n  const hashtable = getStoreFromWindow();\n  const api = {\n    setItem(key, value) {\n      hashtable[key] = value;\n      setStoreToWindow(hashtable);\n    },\n    getItem(key) {\n      const value = hashtable[key];\n      return value === undefined ? null : value;\n    },\n    removeItem(key) {\n      delete hashtable[key];\n      setStoreToWindow(hashtable);\n    },\n    clear() {\n      Object.keys(hashtable).forEach(key => delete hashtable[key]);\n      setStoreToWindow(hashtable);\n    },\n    // this method will be removed after being invoked\n    // because is not part of the Web Storage interface\n    initialize() {\n      // copies all existing elements in the storage\n      Object.assign(api, hashtable);\n    },\n  };\n  return api;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/memory-storage.js","import cookieStorage from './cookie-storage';\nimport memoryStorage from './memory-storage';\nimport {setProperty} from './utils';\n\n/**\n * @private\n *\n * Adds the current elements in the storage object.\n *\n * @param  {object} api: the storage mechanism to initialize\n * @return {object}\n */\nfunction initApi(api) {\n  if (!api.initialize) return api;\n  // sets read-only and non-enumerable properties\n  for (let prop in api) { // eslint-disable-line\n    if (prop !== 'initialize') {\n      setProperty(api, prop);\n    }\n  }\n  api.initialize();\n  // this method is removed after being invoked\n  // because is not part of the Web Storage interface\n  delete api.initialize;\n  return api;\n}\n\n/**\n * @public\n *\n * Proxy for storage mechanisms.\n * All members implement the Web Storage interface.\n *\n * @see\n * https://developer.mozilla.org/en-US/docs/Web/API/Storage\n *\n * @type {object}\n */\nexport const proxy = {\n  localStorage: window.localStorage,\n  sessionStorage: window.sessionStorage,\n  cookieStorage: initApi(cookieStorage()),\n  memoryStorage: initApi(memoryStorage()),\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/proxy-mechanism.js","/**\n * This library uses an adapter that implements the Web Storage interface,\n * which is very useful to deal with the lack of compatibility between\n * document.cookie and localStorage and sessionStorage.\n *\n * It also provides a memoryStorage fallback that stores the data in memory\n * when all of above mechanisms are not available.\n *\n * Author: David Rivera\n * Github: https://github.com/jherax\n * License: \"MIT\"\n *\n * You can fork this project on github:\n * https://github.com/jherax/proxy-storage.git\n */\n\nimport WebStorage, {proxy, webStorageSettings} from './web-storage';\nimport {isAvailable} from './is-available';\n\n/**\n * @public\n *\n * Current storage mechanism.\n *\n * @type {object}\n */\nlet storage = null;\n\n/**\n * @public\n *\n * Get/Set the storage mechanism to use by default.\n *\n * @type {object}\n */\nconst configStorage = {\n  get() {\n    return storage.__storage__;\n  },\n\n  /**\n   * Sets the storage mechanism to use by default.\n   *\n   * @param  {string} storageType: it can be \"localStorage\", \"sessionStorage\", \"cookieStorage\", or \"memoryStorage\"\n   * @return {void}\n   */\n  set(storageType) {\n    if (!Object.prototype.hasOwnProperty.call(proxy, storageType)) {\n      throw new Error(`Storage type \"${storageType}\" is not valid`);\n    }\n    storage = new WebStorage(storageType);\n  },\n};\n\n/**\n * @private\n *\n * Checks whether a storage mechanism is available.\n *\n * @param  {string} storageType: it can be \"localStorage\", \"sessionStorage\", \"cookieStorage\", or \"memoryStorage\"\n * @return {boolean}\n */\nfunction isStorageAvailable(storageType) {\n  const storageObj = proxy[storageType];\n  const data = '__proxy-storage__';\n  try {\n    storageObj.setItem(data, data);\n    storageObj.removeItem(data);\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * @private\n *\n * Sets the first or default storage available.\n *\n * @param  {string} storageType: it can be \"localStorage\", \"sessionStorage\", \"cookieStorage\", or \"memoryStorage\"\n * @return {boolean}\n */\nfunction storageAvailable(storageType) {\n  if (isAvailable[storageType]) {\n    webStorageSettings.default = storageType;\n    configStorage.set(storageType);\n  }\n  return isAvailable[storageType];\n}\n\n/**\n * @private\n *\n * Initializes the module.\n *\n * @return {void}\n */\nfunction init() {\n  isAvailable.localStorage = isStorageAvailable('localStorage');\n  isAvailable.sessionStorage = isStorageAvailable('sessionStorage');\n  isAvailable.cookieStorage = isStorageAvailable('cookieStorage');\n  webStorageSettings.isAvailable = isAvailable;\n  // sets the default storage mechanism available\n  Object.keys(isAvailable).some(storageAvailable);\n}\n\ninit();\n\n// @public API\nexport {storage as default, WebStorage, configStorage, isAvailable};\n\n\n\n// WEBPACK FOOTER //\n// ./src/proxy-storage.js"],"sourceRoot":""}