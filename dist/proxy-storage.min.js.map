{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///proxy-storage.min.js","webpack:///webpack/bootstrap 5a868f52884cbec277a9","webpack:///./src/proxy-storage.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_classCallCheck","instance","Constructor","TypeError","executeInterceptors","command","_len","arguments","length","args","Array","_key","_interceptors","forEach","action","checkEmpty","key","Error","setProperty","obj","name","value","Object","defineProperty","configurable","enumerable","writable","cookieStorage","api","setItem","days","path","undefined","expires","date","Date","setTime","getTime","toUTCString","$cookie","set","encodeURIComponent","getItem","nameEQ","cookie","get","split","find","findCookie","trim","substring","decodeURIComponent","removeItem","clear","eq","indexEQ","indexOf","toString","findItem","item","memoryStorage","hashtable","getStoreFromWindow","push","setStoreToWindow","index","findIndex","splice","store","JSON","parse","window","self","e","stringify","isStorageAvailable","storageType","storageObj","_proxy","data","storageAvaliable","isAvaliable","configStorage","init","localStorage","sessionStorage","keys","some","_createClass","defineProperties","target","props","i","descriptor","protoProps","staticProps","prototype","WebStorage","hasOwnProperty","__storage","storage","_currentStorageName","default","document"],"mappings":"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","file":"proxy-storage.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"proxyStorage\"] = factory();\n\telse\n\t\troot[\"proxyStorage\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"proxyStorage\"] = factory();\n\telse\n\t\troot[\"proxyStorage\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/* eslint-disable no-use-before-define, no-invalid-this */\n\t\n\t/**\n\t * This library uses an adapter that implements the Web Storage interface,\n\t * which is very useful to deal with the lack of compatibility between\n\t * document.cookie and localStorage and sessionStorage.\n\t *\n\t * It also provides a memoryStorage fallback that stores the data in memory\n\t * when all of above mechanisms are not available.\n\t *\n\t * Author: David Rivera\n\t * Github: https://github.com/jherax\n\t * License: \"MIT\"\n\t *\n\t * You can fork this project on github:\n\t * https://github.com/jherax/proxy-storage.git\n\t */\n\t\n\t// If you want to support all ES6 features, uncomment the next line\n\t// import 'babel-polyfill';\n\t\n\t/**\n\t * @private\n\t *\n\t * Proxy for Web Storage and Cookies.\n\t * All members implement the Web Storage interface.\n\t *\n\t * @Reference\n\t * https://developer.mozilla.org/en-US/docs/Web/API/Storage\n\t *\n\t * @type {object}\n\t */\n\tvar _proxy = {\n\t  localStorage: window.localStorage,\n\t  sessionStorage: window.sessionStorage,\n\t  cookieStorage: cookieStorage(),\n\t  memoryStorage: memoryStorage()\n\t};\n\t\n\t/**\n\t * @private\n\t *\n\t * Stores the interceptors for WebStorage methods\n\t *\n\t * @type {object}\n\t */\n\tvar _interceptors = {\n\t  setItem: [],\n\t  getItem: [],\n\t  removeItem: [],\n\t  clear: []\n\t};\n\t\n\t/**\n\t * Executes the interceptors of a WebStorage method\n\t *\n\t * @param  {string} command: name of the method to intercept\n\t * @return {void}\n\t */\n\tfunction executeInterceptors(command) {\n\t  for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n\t    args[_key - 1] = arguments[_key];\n\t  }\n\t\n\t  _interceptors[command].forEach(function (action) {\n\t    return action.apply(undefined, args);\n\t  });\n\t}\n\t\n\t/**\n\t * @private\n\t *\n\t * Validates if the key is not empty.\n\t * (null, undefined or empty string)\n\t * @param  {string} key: keyname of the storage\n\t * @return {void}\n\t */\n\tfunction checkEmpty(key) {\n\t  if (key == null || key === '') {\n\t    throw new Error('The key provided can not be empty');\n\t  }\n\t}\n\t\n\t/**\n\t * @private\n\t *\n\t * Creates a non-enumerable read-only property.\n\t *\n\t * @param  {object} obj: the object to add the property\n\t * @param  {string} name: the name of the property\n\t * @param  {any} value: the value of the property\n\t * @return {void}\n\t */\n\tfunction setProperty(obj, name, value) {\n\t  Object.defineProperty(obj, name, {\n\t    configurable: false,\n\t    enumerable: false,\n\t    writable: false,\n\t    value: value\n\t  });\n\t}\n\t\n\t/**\n\t * @public\n\t *\n\t * Implementation of the Web Storage interface.\n\t * It saves and retrieves values as JSON.\n\t *\n\t * @Reference\n\t * https://developer.mozilla.org/en-US/docs/Web/API/Storage\n\t *\n\t * @type {Class}\n\t */\n\t\n\tvar WebStorage = function () {\n\t  /**\n\t   * Creates an instance of WebStorage.\n\t   *\n\t   * @param {string} storageType: it can be \"localStorage\", \"sessionStorage\", \"cookieStorage\", or \"memoryStorage\"\n\t   *\n\t   * @memberOf WebStorage\n\t   */\n\t  function WebStorage(storageType) {\n\t    _classCallCheck(this, WebStorage);\n\t\n\t    if (!_proxy.hasOwnProperty(storageType)) {\n\t      throw new Error('Storage type \"' + storageType + '\" is not valid');\n\t    }\n\t    setProperty(this, '__storage', _proxy[storageType]);\n\t  }\n\t  /**\n\t   * Stores a value given a key name.\n\t   *\n\t   * @param  {string} key: keyname of the storage\n\t   * @param  {any} value: data to save in the storage\n\t   * @return {void}\n\t   *\n\t   * @memberOf WebStorage\n\t   */\n\t\n\t\n\t  _createClass(WebStorage, [{\n\t    key: 'setItem',\n\t    value: function setItem(key, value) {\n\t      checkEmpty(key);\n\t      executeInterceptors('setItem', key, value);\n\t      value = JSON.stringify(value);\n\t      this.__storage.setItem(key, value);\n\t    }\n\t    /**\n\t     * Retrieves a value by its key name.\n\t     *\n\t     * @param  {string} key: keyname of the storage\n\t     * @return {void}\n\t     *\n\t     * @memberOf WebStorage\n\t     */\n\t\n\t  }, {\n\t    key: 'getItem',\n\t    value: function getItem(key) {\n\t      checkEmpty(key);\n\t      executeInterceptors('getItem', key);\n\t      var value = JSON.parse(this.__storage.getItem(key));\n\t      return value;\n\t    }\n\t    /**\n\t     * Deletes a key from the storage.\n\t     *\n\t     * @param  {string} key: keyname of the storage\n\t     * @return {void}\n\t     *\n\t     * @memberOf WebStorage\n\t     */\n\t\n\t  }, {\n\t    key: 'removeItem',\n\t    value: function removeItem(key) {\n\t      checkEmpty(key);\n\t      executeInterceptors('removeItem', key);\n\t      this.__storage.removeItem(key);\n\t    }\n\t    /**\n\t     * Removes all keys from the storage.\n\t     *\n\t     * @return {void}\n\t     *\n\t     * @memberOf WebStorage\n\t     */\n\t\n\t  }, {\n\t    key: 'clear',\n\t    value: function clear() {\n\t      executeInterceptors('clear');\n\t      this.__storage.clear();\n\t    }\n\t    /**\n\t     * Adds an interceptor to a WebStorage method\n\t     *\n\t     * @param  {string} command: name of the API method to intercept\n\t     * @param  {function} action: callback executed when the API method is called\n\t     * @return {void}\n\t     *\n\t     * @memberOf WebStorage\n\t     */\n\t\n\t  }], [{\n\t    key: 'interceptors',\n\t    value: function interceptors(command, action) {\n\t      if (command in _interceptors && typeof action === 'function') _interceptors[command].push(action);\n\t    }\n\t  }]);\n\t\n\t  return WebStorage;\n\t}();\n\t\n\t/**\n\t * @public\n\t *\n\t * Determines which storage mechanisms are available.\n\t *\n\t * @type {object}\n\t */\n\t\n\t\n\tvar isAvaliable = {\n\t  localStorage: false,\n\t  sessionStorage: false,\n\t  cookieStorage: false,\n\t  memoryStorage: true\n\t};\n\t\n\t/**\n\t * @public\n\t *\n\t * Current storage mechanism.\n\t * @type {object}\n\t */\n\tvar storage = null;\n\t\n\t/**\n\t * @private\n\t *\n\t * Current storage type\n\t * @type {string}\n\t */\n\tvar _currentStorageName = null;\n\t\n\t/**\n\t * @public\n\t *\n\t * Get/Set the storage mechanism to use by default.\n\t * @type {object}\n\t */\n\tvar configStorage = {\n\t  get: function get() {\n\t    return _currentStorageName;\n\t  },\n\t\n\t\n\t  /**\n\t   * Sets the storage mechanism to use by default.\n\t   * @param  {string} storageType: it can be \"localStorage\", \"sessionStorage\", \"cookieStorage\", or \"memoryStorage\"\n\t   * @return {void}\n\t   */\n\t  set: function set(storageType) {\n\t    if (!_proxy.hasOwnProperty(storageType)) {\n\t      throw new Error('Storage type \"' + storageType + '\" is not valid');\n\t    }\n\t    exports.default = storage = new WebStorage(storageType);\n\t    _currentStorageName = storageType;\n\t  }\n\t};\n\t\n\t/**\n\t * @private\n\t *\n\t * Alias for the default cookie storage associated with the current document.\n\t *\n\t * @Reference\n\t * https://developer.mozilla.org/en-US/docs/Web/API/Document/cookie\n\t *\n\t * @type {object}\n\t */\n\tvar $cookie = {\n\t  get: function get() {\n\t    return document.cookie;\n\t  },\n\t  set: function set(value) {\n\t    document.cookie = value;\n\t  }\n\t};\n\t\n\t/**\n\t * @private\n\t *\n\t * Manages actions for creation/reading/deleting cookies.\n\t * Implements Web Storage interface methods.\n\t *\n\t * @return {object}\n\t */\n\tfunction cookieStorage() {\n\t  var api = {\n\t    setItem: function setItem(key, value, days) {\n\t      var path = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '/';\n\t\n\t      var expires = '';\n\t      if (days) {\n\t        var date = new Date();\n\t        days = days * 24 * 60 * 60 * 1000;\n\t        date.setTime(date.getTime() + days);\n\t        expires = '; expires=' + date.toUTCString();\n\t      }\n\t      $cookie.set(key + '=' + encodeURIComponent(value) + expires + '; path=' + path);\n\t    },\n\t    getItem: function getItem(key) {\n\t      var value = null;\n\t      var nameEQ = key + '=';\n\t      var cookie = $cookie.get().split(';').find(findCookie, nameEQ);\n\t      if (cookie) {\n\t        // prevent leading spaces before the key name\n\t        value = cookie.trim().substring(nameEQ.length, cookie.length);\n\t        value = decodeURIComponent(value);\n\t      }\n\t      return value;\n\t    },\n\t    removeItem: function removeItem(key) {\n\t      api.setItem(key, '', -1);\n\t    },\n\t    clear: function clear() {\n\t      var eq = '=';\n\t      var indexEQ = void 0,\n\t          key = void 0;\n\t      $cookie.get().split(';').forEach(function (cookie) {\n\t        indexEQ = cookie.indexOf(eq);\n\t        if (indexEQ > -1) {\n\t          key = cookie.substring(0, indexEQ);\n\t          // prevent leading spaces before the key\n\t          api.removeItem(key.trim());\n\t        }\n\t      });\n\t    }\n\t  };\n\t  return api;\n\t}\n\t\n\t/**\n\t * @private\n\t *\n\t * Callback that finds an element in the array.\n\t * @param  {string} cookie: key=value\n\t * @return {boolean}\n\t */\n\tfunction findCookie(cookie) {\n\t  var nameEQ = this.toString();\n\t  // prevent leading spaces before the key\n\t  return cookie.trim().indexOf(nameEQ) === 0;\n\t}\n\t\n\t/**\n\t * @private\n\t *\n\t * Callback that finds an element in the array.\n\t * @param  {object} item: {key, value}\n\t * @return {boolean}\n\t */\n\tfunction findItem(item) {\n\t  var key = this.toString();\n\t  return item.key === key;\n\t}\n\t\n\t/**\n\t * @private\n\t *\n\t * Manages actions for creation/reading/deleting data in memory.\n\t * Implements Web Storage interface methods.\n\t * It also adds a hack to persist the store as a session in the current window.\n\t *\n\t * @return {object}\n\t */\n\tfunction memoryStorage() {\n\t  var hashtable = getStoreFromWindow();\n\t  var api = {\n\t    setItem: function setItem(key, value) {\n\t      var item = hashtable.find(findItem, key);\n\t      if (item) item.value = value;else hashtable.push({ key: key, value: value });\n\t      setStoreToWindow(hashtable);\n\t    },\n\t    getItem: function getItem(key) {\n\t      var item = hashtable.find(findItem, key);\n\t      if (item) return item.value;\n\t      return null;\n\t    },\n\t    removeItem: function removeItem(key) {\n\t      var index = hashtable.findIndex(findItem, key);\n\t      if (index > -1) hashtable.splice(index, 1);\n\t      setStoreToWindow(hashtable);\n\t    },\n\t    clear: function clear() {\n\t      hashtable.length = 0;\n\t      setStoreToWindow(hashtable);\n\t    }\n\t  };\n\t  return api;\n\t}\n\t\n\t/**\n\t * @private\n\t *\n\t * Gets the hashtable store from the current window.\n\t * @return {array}\n\t */\n\tfunction getStoreFromWindow() {\n\t  try {\n\t    var store = JSON.parse(window.self.name);\n\t    if (store instanceof Array) return store;\n\t  } catch (e) {} // eslint-disable-line\n\t  return []; /* {key,value} */\n\t}\n\t\n\t/**\n\t * @private\n\t *\n\t * Saves the hashtable store in the current window.\n\t * @param  {array} hashtable: list of objects stored in memoryStorage\n\t * @return {void}\n\t */\n\tfunction setStoreToWindow(hashtable) {\n\t  var store = JSON.stringify(hashtable);\n\t  window.self.name = store;\n\t}\n\t\n\t/**\n\t * @private\n\t *\n\t * Checks whether a storage mechanism is available.\n\t * @param  {string} storageType: it can be \"localStorage\", \"sessionStorage\", \"cookieStorage\", or \"memoryStorage\"\n\t * @return {boolean}\n\t */\n\tfunction isStorageAvailable(storageType) {\n\t  var storageObj = _proxy[storageType];\n\t  var data = '__proxy-storage__';\n\t  try {\n\t    storageObj.setItem(data, data);\n\t    storageObj.removeItem(data);\n\t    return true;\n\t  } catch (e) {\n\t    return false;\n\t  }\n\t}\n\t\n\t/**\n\t * @private\n\t *\n\t * Sets the default storage mechanism available.\n\t * @param  {string} storageType: it can be \"localStorage\", \"sessionStorage\", \"cookieStorage\", or \"memoryStorage\"\n\t * @return {boolean}\n\t */\n\tfunction storageAvaliable(storageType) {\n\t  if (isAvaliable[storageType]) {\n\t    configStorage.set(storageType);\n\t  }\n\t  return isAvaliable[storageType];\n\t}\n\t\n\t/**\n\t * @private\n\t *\n\t * Initializes the module.\n\t * @return {void}\n\t */\n\tfunction init() {\n\t  isAvaliable.localStorage = isStorageAvailable('localStorage');\n\t  isAvaliable.sessionStorage = isStorageAvailable('sessionStorage');\n\t  isAvaliable.cookieStorage = isStorageAvailable('cookieStorage');\n\t  // sets the default storage mechanism available\n\t  Object.keys(isAvaliable).some(storageAvaliable);\n\t}\n\t\n\tinit();\n\t\n\t// @public API\n\texports.default = storage;\n\texports.WebStorage = WebStorage;\n\texports.configStorage = configStorage;\n\texports.isAvaliable = isAvaliable;\n\n/***/ }\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// proxy-storage.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 5a868f52884cbec277a9","/* eslint-disable no-use-before-define, no-invalid-this */\n\n/**\n * This library uses an adapter that implements the Web Storage interface,\n * which is very useful to deal with the lack of compatibility between\n * document.cookie and localStorage and sessionStorage.\n *\n * It also provides a memoryStorage fallback that stores the data in memory\n * when all of above mechanisms are not available.\n *\n * Author: David Rivera\n * Github: https://github.com/jherax\n * License: \"MIT\"\n *\n * You can fork this project on github:\n * https://github.com/jherax/proxy-storage.git\n */\n\n// If you want to support all ES6 features, uncomment the next line\n// import 'babel-polyfill';\n\n/**\n * @private\n *\n * Proxy for Web Storage and Cookies.\n * All members implement the Web Storage interface.\n *\n * @Reference\n * https://developer.mozilla.org/en-US/docs/Web/API/Storage\n *\n * @type {object}\n */\nconst _proxy = {\n  localStorage: window.localStorage,\n  sessionStorage: window.sessionStorage,\n  cookieStorage: cookieStorage(),\n  memoryStorage: memoryStorage(),\n};\n\n/**\n * @private\n *\n * Stores the interceptors for WebStorage methods\n *\n * @type {object}\n */\nconst _interceptors = {\n  setItem: [],\n  getItem: [],\n  removeItem: [],\n  clear: [],\n};\n\n/**\n * Executes the interceptors of a WebStorage method\n *\n * @param  {string} command: name of the method to intercept\n * @return {void}\n */\nfunction executeInterceptors(command, ...args) {\n  _interceptors[command].forEach((action) => action(...args));\n}\n\n/**\n * @private\n *\n * Validates if the key is not empty.\n * (null, undefined or empty string)\n * @param  {string} key: keyname of the storage\n * @return {void}\n */\nfunction checkEmpty(key) {\n  if (key == null || key === '') {\n    throw new Error('The key provided can not be empty');\n  }\n}\n\n/**\n * @private\n *\n * Creates a non-enumerable read-only property.\n *\n * @param  {object} obj: the object to add the property\n * @param  {string} name: the name of the property\n * @param  {any} value: the value of the property\n * @return {void}\n */\nfunction setProperty(obj, name, value) {\n  Object.defineProperty(obj, name, {\n    configurable: false,\n    enumerable: false,\n    writable: false,\n    value: value,\n  });\n}\n\n/**\n * @public\n *\n * Implementation of the Web Storage interface.\n * It saves and retrieves values as JSON.\n *\n * @Reference\n * https://developer.mozilla.org/en-US/docs/Web/API/Storage\n *\n * @type {Class}\n */\nclass WebStorage {\n  /**\n   * Creates an instance of WebStorage.\n   *\n   * @param {string} storageType: it can be \"localStorage\", \"sessionStorage\", \"cookieStorage\", or \"memoryStorage\"\n   *\n   * @memberOf WebStorage\n   */\n  constructor(storageType) {\n    if (!_proxy.hasOwnProperty(storageType)) {\n      throw new Error(`Storage type \"${storageType}\" is not valid`);\n    }\n    setProperty(this, '__storage', _proxy[storageType]);\n  }\n  /**\n   * Stores a value given a key name.\n   *\n   * @param  {string} key: keyname of the storage\n   * @param  {any} value: data to save in the storage\n   * @return {void}\n   *\n   * @memberOf WebStorage\n   */\n  setItem(key, value) {\n    checkEmpty(key);\n    executeInterceptors('setItem', key, value);\n    value = JSON.stringify(value);\n    this.__storage.setItem(key, value);\n  }\n  /**\n   * Retrieves a value by its key name.\n   *\n   * @param  {string} key: keyname of the storage\n   * @return {void}\n   *\n   * @memberOf WebStorage\n   */\n  getItem(key) {\n    checkEmpty(key);\n    executeInterceptors('getItem', key);\n    const value = JSON.parse(this.__storage.getItem(key));\n    return value;\n  }\n  /**\n   * Deletes a key from the storage.\n   *\n   * @param  {string} key: keyname of the storage\n   * @return {void}\n   *\n   * @memberOf WebStorage\n   */\n  removeItem(key) {\n    checkEmpty(key);\n    executeInterceptors('removeItem', key);\n    this.__storage.removeItem(key);\n  }\n  /**\n   * Removes all keys from the storage.\n   *\n   * @return {void}\n   *\n   * @memberOf WebStorage\n   */\n  clear() {\n    executeInterceptors('clear');\n    this.__storage.clear();\n  }\n  /**\n   * Adds an interceptor to a WebStorage method\n   *\n   * @param  {string} command: name of the API method to intercept\n   * @param  {function} action: callback executed when the API method is called\n   * @return {void}\n   *\n   * @memberOf WebStorage\n   */\n  static interceptors(command, action) {\n    if (command in _interceptors && typeof action === 'function')\n      _interceptors[command].push(action);\n  }\n}\n\n/**\n * @public\n *\n * Determines which storage mechanisms are available.\n *\n * @type {object}\n */\nconst isAvaliable = {\n  localStorage: false,\n  sessionStorage: false,\n  cookieStorage: false,\n  memoryStorage: true,\n};\n\n/**\n * @public\n *\n * Current storage mechanism.\n * @type {object}\n */\nlet storage = null;\n\n/**\n * @private\n *\n * Current storage type\n * @type {string}\n */\nlet _currentStorageName = null;\n\n/**\n * @public\n *\n * Get/Set the storage mechanism to use by default.\n * @type {object}\n */\nconst configStorage = {\n  get() {\n    return _currentStorageName;\n  },\n\n  /**\n   * Sets the storage mechanism to use by default.\n   * @param  {string} storageType: it can be \"localStorage\", \"sessionStorage\", \"cookieStorage\", or \"memoryStorage\"\n   * @return {void}\n   */\n  set(storageType) {\n    if (!_proxy.hasOwnProperty(storageType)) {\n      throw new Error(`Storage type \"${storageType}\" is not valid`);\n    }\n    storage = new WebStorage(storageType);\n    _currentStorageName = storageType;\n  },\n};\n\n/**\n * @private\n *\n * Alias for the default cookie storage associated with the current document.\n *\n * @Reference\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/cookie\n *\n * @type {object}\n */\nconst $cookie = {\n  get: () => document.cookie,\n  set: (value) => {\n    document.cookie = value;\n  },\n};\n\n/**\n * @private\n *\n * Manages actions for creation/reading/deleting cookies.\n * Implements Web Storage interface methods.\n *\n * @return {object}\n */\nfunction cookieStorage() {\n  const api = {\n    setItem(key, value, days, path = '/') {\n      let expires = '';\n      if (days) {\n        const date = new Date();\n        days = days * 24 * 60 * 60 * 1000;\n        date.setTime(date.getTime() + days);\n        expires = `; expires=${date.toUTCString()}`;\n      }\n      $cookie.set(`${key}=${encodeURIComponent(value)}${expires}; path=${path}`);\n    },\n\n    getItem(key) {\n      let value = null;\n      const nameEQ = `${key}=`;\n      const cookie = $cookie.get().split(';').find(findCookie, nameEQ);\n      if (cookie) {\n        // prevent leading spaces before the key name\n        value = cookie.trim().substring(nameEQ.length, cookie.length);\n        value = decodeURIComponent(value);\n      }\n      return value;\n    },\n\n    removeItem(key) {\n      api.setItem(key, '', -1);\n    },\n\n    clear() {\n      const eq = '=';\n      let indexEQ, key;\n      $cookie.get().split(';').forEach((cookie) => {\n        indexEQ = cookie.indexOf(eq);\n        if (indexEQ > -1) {\n          key = cookie.substring(0, indexEQ);\n          // prevent leading spaces before the key\n          api.removeItem(key.trim());\n        }\n      });\n    },\n  };\n  return api;\n}\n\n/**\n * @private\n *\n * Callback that finds an element in the array.\n * @param  {string} cookie: key=value\n * @return {boolean}\n */\nfunction findCookie(cookie) {\n  const nameEQ = this.toString();\n  // prevent leading spaces before the key\n  return cookie.trim().indexOf(nameEQ) === 0;\n}\n\n/**\n * @private\n *\n * Callback that finds an element in the array.\n * @param  {object} item: {key, value}\n * @return {boolean}\n */\nfunction findItem(item) {\n  const key = this.toString();\n  return item.key === key;\n}\n\n/**\n * @private\n *\n * Manages actions for creation/reading/deleting data in memory.\n * Implements Web Storage interface methods.\n * It also adds a hack to persist the store as a session in the current window.\n *\n * @return {object}\n */\nfunction memoryStorage() {\n  const hashtable = getStoreFromWindow();\n  const api = {\n    setItem(key, value) {\n      const item = hashtable.find(findItem, key);\n      if (item) item.value = value;\n      else hashtable.push({key, value});\n      setStoreToWindow(hashtable);\n    },\n    getItem(key) {\n      const item = hashtable.find(findItem, key);\n      if (item) return item.value;\n      return null;\n    },\n    removeItem(key) {\n      const index = hashtable.findIndex(findItem, key);\n      if (index > -1) hashtable.splice(index, 1);\n      setStoreToWindow(hashtable);\n    },\n    clear() {\n      hashtable.length = 0;\n      setStoreToWindow(hashtable);\n    },\n  };\n  return api;\n}\n\n/**\n * @private\n *\n * Gets the hashtable store from the current window.\n * @return {array}\n */\nfunction getStoreFromWindow() {\n  try {\n    const store = JSON.parse(window.self.name);\n    if (store instanceof Array) return store;\n  } catch (e) {} // eslint-disable-line\n  return []; /* {key,value} */\n}\n\n/**\n * @private\n *\n * Saves the hashtable store in the current window.\n * @param  {array} hashtable: list of objects stored in memoryStorage\n * @return {void}\n */\nfunction setStoreToWindow(hashtable) {\n  const store = JSON.stringify(hashtable);\n  window.self.name = store;\n}\n\n/**\n * @private\n *\n * Checks whether a storage mechanism is available.\n * @param  {string} storageType: it can be \"localStorage\", \"sessionStorage\", \"cookieStorage\", or \"memoryStorage\"\n * @return {boolean}\n */\nfunction isStorageAvailable(storageType) {\n  const storageObj = _proxy[storageType];\n  const data = '__proxy-storage__';\n  try {\n    storageObj.setItem(data, data);\n    storageObj.removeItem(data);\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * @private\n *\n * Sets the default storage mechanism available.\n * @param  {string} storageType: it can be \"localStorage\", \"sessionStorage\", \"cookieStorage\", or \"memoryStorage\"\n * @return {boolean}\n */\nfunction storageAvaliable(storageType) {\n  if (isAvaliable[storageType]) {\n    configStorage.set(storageType);\n  }\n  return isAvaliable[storageType];\n}\n\n/**\n * @private\n *\n * Initializes the module.\n * @return {void}\n */\nfunction init() {\n  isAvaliable.localStorage = isStorageAvailable('localStorage');\n  isAvaliable.sessionStorage = isStorageAvailable('sessionStorage');\n  isAvaliable.cookieStorage = isStorageAvailable('cookieStorage');\n  // sets the default storage mechanism available\n  Object.keys(isAvaliable).some(storageAvaliable);\n}\n\ninit();\n\n// @public API\nexport {storage as default, WebStorage, configStorage, isAvaliable};\n\n\n\n// WEBPACK FOOTER //\n// ./src/proxy-storage.js"],"sourceRoot":""}