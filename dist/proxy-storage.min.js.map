{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///proxy-storage.min.js","webpack:///webpack/bootstrap fd1352cb29fe6678ee5b","webpack:///./dist/proxy-storage.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_classCallCheck","instance","Constructor","TypeError","initApi","api","prop","setProperty","initialize","obj","name","value","descriptor","configurable","enumerable","writable","Object","defineProperty","executeInterceptors","command","_len","arguments","length","args","Array","_key","_interceptors","forEach","action","apply","undefined","checkEmpty","key","Error","isObject","prototype","toString","setTimestamp","options","opt","assign","d","date","Date","hours","setHours","getHours","days","setDate","getDate","months","setMonth","getMonth","years","setFullYear","getFullYear","buildExpirationString","expires","toUTCString","findCookie","cookie","nameEQ","trim","indexOf","cookieStorage","setItem","path","encodeURIComponent","$cookie","set","getItem","get","split","find","substring","decodeURIComponent","removeItem","clear","eq","indexEQ","index","memoryStorage","hashtable","getStoreFromWindow","setStoreToWindow","keys","store","JSON","parse","window","self","_typeof","e","stringify","isStorageAvailable","storageType","storageObj","_proxy","data","storageAvaliable","isAvaliable","configStorage","init","localStorage","sessionStorage","some","Symbol","iterator","constructor","_createClass","defineProperties","target","props","i","protoProps","staticProps","storage","document","_instances","WebStorage","_this","hasOwnProperty","__storage__","_this2","push","default"],"mappings":"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","file":"proxy-storage.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"proxyStorage\"] = factory();\n\telse\n\t\troot[\"proxyStorage\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"proxyStorage\"] = factory();\n\telse\n\t\troot[\"proxyStorage\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t(function webpackUniversalModuleDefinition(root, factory) {\n\t\tif(true)\n\t\t\tmodule.exports = factory();\n\t\telse if(typeof define === 'function' && define.amd)\n\t\t\tdefine([], factory);\n\t\telse if(typeof exports === 'object')\n\t\t\texports[\"proxyStorage\"] = factory();\n\t\telse\n\t\t\troot[\"proxyStorage\"] = factory();\n\t})(this, function() {\n\treturn /******/ (function(modules) { // webpackBootstrap\n\t/******/ \t// The module cache\n\t/******/ \tvar installedModules = {};\n\t\n\t/******/ \t// The require function\n\t/******/ \tfunction __webpack_require__(moduleId) {\n\t\n\t/******/ \t\t// Check if module is in cache\n\t/******/ \t\tif(installedModules[moduleId])\n\t/******/ \t\t\treturn installedModules[moduleId].exports;\n\t\n\t/******/ \t\t// Create a new module (and put it into the cache)\n\t/******/ \t\tvar module = installedModules[moduleId] = {\n\t/******/ \t\t\texports: {},\n\t/******/ \t\t\tid: moduleId,\n\t/******/ \t\t\tloaded: false\n\t/******/ \t\t};\n\t\n\t/******/ \t\t// Execute the module function\n\t/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t\n\t/******/ \t\t// Flag the module as loaded\n\t/******/ \t\tmodule.loaded = true;\n\t\n\t/******/ \t\t// Return the exports of the module\n\t/******/ \t\treturn module.exports;\n\t/******/ \t}\n\t\n\t\n\t/******/ \t// expose the modules object (__webpack_modules__)\n\t/******/ \t__webpack_require__.m = modules;\n\t\n\t/******/ \t// expose the module cache\n\t/******/ \t__webpack_require__.c = installedModules;\n\t\n\t/******/ \t// __webpack_public_path__\n\t/******/ \t__webpack_require__.p = \"\";\n\t\n\t/******/ \t// Load entry module and return exports\n\t/******/ \treturn __webpack_require__(0);\n\t/******/ })\n\t/************************************************************************/\n\t/******/ ([\n\t/* 0 */\n\t/***/ function(module, exports) {\n\t\n\t\t'use strict';\n\t\n\t\tObject.defineProperty(exports, \"__esModule\", {\n\t\t  value: true\n\t\t});\n\t\n\t\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\t\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\t\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t\t/* eslint-disable no-use-before-define, no-invalid-this */\n\t\n\t\t/**\n\t\t * This library uses an adapter that implements the Web Storage interface,\n\t\t * which is very useful to deal with the lack of compatibility between\n\t\t * document.cookie and localStorage and sessionStorage.\n\t\t *\n\t\t * It also provides a memoryStorage fallback that stores the data in memory\n\t\t * when all of above mechanisms are not available.\n\t\t *\n\t\t * Author: David Rivera\n\t\t * Github: https://github.com/jherax\n\t\t * License: \"MIT\"\n\t\t *\n\t\t * You can fork this project on github:\n\t\t * https://github.com/jherax/proxy-storage.git\n\t\t */\n\t\n\t\t// If you want to support all ES6 features, uncomment the next line\n\t\t// import 'babel-polyfill';\n\t\n\t\t/**\n\t\t * @public\n\t\t *\n\t\t * Current storage mechanism.\n\t\t * @type {object}\n\t\t */\n\t\tvar storage = null;\n\t\n\t\t/**\n\t\t * @public\n\t\t *\n\t\t * Determines which storage mechanisms are available.\n\t\t *\n\t\t * @type {object}\n\t\t */\n\t\tvar isAvaliable = {\n\t\t  localStorage: false,\n\t\t  sessionStorage: false,\n\t\t  cookieStorage: false,\n\t\t  memoryStorage: true };\n\t\n\t\t/**\n\t\t * @private\n\t\t *\n\t\t * Proxy for the default cookie storage associated with the current document.\n\t\t *\n\t\t * @Reference\n\t\t * https://developer.mozilla.org/en-US/docs/Web/API/Document/cookie\n\t\t *\n\t\t * @type {object}\n\t\t */\n\t\tvar $cookie = {\n\t\t  get: function get() {\n\t\t    return document.cookie;\n\t\t  },\n\t\t  set: function set(value) {\n\t\t    document.cookie = value;\n\t\t  }\n\t\t};\n\t\n\t\t/**\n\t\t * @private\n\t\t *\n\t\t * Keeps WebStorage instances by type as singletons\n\t\t *\n\t\t * @type {object}\n\t\t */\n\t\tvar _instances = {};\n\t\n\t\t/**\n\t\t * @private\n\t\t *\n\t\t * Proxy for Web Storage and Cookies.\n\t\t * All members implement the Web Storage interface.\n\t\t *\n\t\t * @Reference\n\t\t * https://developer.mozilla.org/en-US/docs/Web/API/Storage\n\t\t *\n\t\t * @type {object}\n\t\t */\n\t\tvar _proxy = {\n\t\t  localStorage: window.localStorage,\n\t\t  sessionStorage: window.sessionStorage,\n\t\t  cookieStorage: initApi(cookieStorage()),\n\t\t  memoryStorage: initApi(memoryStorage())\n\t\t};\n\t\n\t\t/**\n\t\t * @private\n\t\t *\n\t\t * Adds the current elements in the storage object\n\t\t *\n\t\t * @param  {object} api: the API to initialize\n\t\t * @return {object}\n\t\t */\n\t\tfunction initApi(api) {\n\t\t  // sets read-only and non-enumerable properties\n\t\t  for (var prop in api) {\n\t\t    // eslint-disable-line\n\t\t    if (prop !== 'initialize') setProperty(api, prop);\n\t\t  }\n\t\t  api.initialize();\n\t\t  // this method is removed after being invoked\n\t\t  // because is not part of the Web Storage interface\n\t\t  delete api.initialize;\n\t\t  return api;\n\t\t}\n\t\n\t\t/**\n\t\t * @private\n\t\t *\n\t\t * Creates a non-enumerable read-only property.\n\t\t *\n\t\t * @param  {object} obj: the object to add the property\n\t\t * @param  {string} name: the name of the property\n\t\t * @param  {any} value: the value of the property\n\t\t * @return {void}\n\t\t */\n\t\tfunction setProperty(obj, name, value) {\n\t\t  var descriptor = {\n\t\t    configurable: false,\n\t\t    enumerable: false,\n\t\t    writable: false\n\t\t  };\n\t\t  if (typeof value !== 'undefined') {\n\t\t    descriptor.value = value;\n\t\t  }\n\t\t  Object.defineProperty(obj, name, descriptor);\n\t\t}\n\t\n\t\t/**\n\t\t * @private\n\t\t *\n\t\t * Stores the interceptors for WebStorage methods\n\t\t *\n\t\t * @type {object}\n\t\t */\n\t\tvar _interceptors = {\n\t\t  setItem: [],\n\t\t  getItem: [],\n\t\t  removeItem: [],\n\t\t  clear: []\n\t\t};\n\t\n\t\t/**\n\t\t * @private\n\t\t *\n\t\t * Executes the interceptors of a WebStorage method\n\t\t *\n\t\t * @param  {string} command: name of the method to intercept\n\t\t * @return {void}\n\t\t */\n\t\tfunction executeInterceptors(command) {\n\t\t  for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n\t\t    args[_key - 1] = arguments[_key];\n\t\t  }\n\t\n\t\t  _interceptors[command].forEach(function (action) {\n\t\t    return action.apply(undefined, args);\n\t\t  });\n\t\t}\n\t\n\t\t/**\n\t\t * @private\n\t\t *\n\t\t * Validates if the key is not empty.\n\t\t * (null, undefined or empty string)\n\t\t * @param  {string} key: keyname of the storage\n\t\t * @return {void}\n\t\t */\n\t\tfunction checkEmpty(key) {\n\t\t  if (key == null || key === '') {\n\t\t    throw new Error('The key provided can not be empty');\n\t\t  }\n\t\t}\n\t\n\t\t/**\n\t\t * @public\n\t\t *\n\t\t * Implementation of the Web Storage interface.\n\t\t * It saves and retrieves values as JSON.\n\t\t *\n\t\t * @Reference\n\t\t * https://developer.mozilla.org/en-US/docs/Web/API/Storage\n\t\t *\n\t\t * @type {class}\n\t\t */\n\t\n\t\tvar WebStorage = function () {\n\t\t  /**\n\t\t   * Creates an instance of WebStorage.\n\t\t   *\n\t\t   * @param {string} storageType: it can be \"localStorage\", \"sessionStorage\", \"cookieStorage\", or \"memoryStorage\"\n\t\t   *\n\t\t   * @memberOf WebStorage\n\t\t   */\n\t\t  function WebStorage(storageType) {\n\t\t    var _this = this;\n\t\n\t\t    _classCallCheck(this, WebStorage);\n\t\n\t\t    if (!_proxy.hasOwnProperty(storageType)) {\n\t\t      throw new Error('Storage type \"' + storageType + '\" is not valid');\n\t\t    }\n\t\t    // keeps instances by storageType as singletons\n\t\t    if (_instances[storageType]) {\n\t\t      return _instances[storageType];\n\t\t    }\n\t\t    setProperty(this, '__storage__', storageType);\n\t\t    // copies all existing elements in the storage\n\t\t    Object.keys(_proxy[storageType]).forEach(function (key) {\n\t\t      var value = _proxy[storageType][key];\n\t\t      try {\n\t\t        _this[key] = JSON.parse(value);\n\t\t      } catch (e) {\n\t\t        _this[key] = value;\n\t\t      }\n\t\t    }, this);\n\t\t    _instances[storageType] = this;\n\t\t  }\n\t\t  /**\n\t\t   * Stores a value given a key name.\n\t\t   *\n\t\t   * @param  {string} key: keyname of the storage\n\t\t   * @param  {any} value: data to save in the storage\n\t\t   * @param  {object} options: additional options for cookieStorage\n\t\t   * @return {void}\n\t\t   *\n\t\t   * @memberOf WebStorage\n\t\t   */\n\t\n\t\n\t\t  _createClass(WebStorage, [{\n\t\t    key: 'setItem',\n\t\t    value: function setItem(key, value, options) {\n\t\t      checkEmpty(key);\n\t\t      this[key] = value;\n\t\t      executeInterceptors('setItem', key, value, options);\n\t\t      value = JSON.stringify(value);\n\t\t      _proxy[this.__storage__].setItem(key, value, options);\n\t\t    }\n\t\t    /**\n\t\t     * Retrieves a value by its key name.\n\t\t     *\n\t\t     * @param  {string} key: keyname of the storage\n\t\t     * @return {void}\n\t\t     *\n\t\t     * @memberOf WebStorage\n\t\t     */\n\t\n\t\t  }, {\n\t\t    key: 'getItem',\n\t\t    value: function getItem(key) {\n\t\t      checkEmpty(key);\n\t\t      executeInterceptors('getItem', key);\n\t\t      var value = _proxy[this.__storage__].getItem(key);\n\t\t      return JSON.parse(value);\n\t\t    }\n\t\t    /**\n\t\t     * Deletes a key from the storage.\n\t\t     *\n\t\t     * @param  {string} key: keyname of the storage\n\t\t     * @return {void}\n\t\t     *\n\t\t     * @memberOf WebStorage\n\t\t     */\n\t\n\t\t  }, {\n\t\t    key: 'removeItem',\n\t\t    value: function removeItem(key) {\n\t\t      checkEmpty(key);\n\t\t      delete this[key];\n\t\t      executeInterceptors('removeItem', key);\n\t\t      _proxy[this.__storage__].removeItem(key);\n\t\t    }\n\t\t    /**\n\t\t     * Removes all keys from the storage.\n\t\t     *\n\t\t     * @return {void}\n\t\t     *\n\t\t     * @memberOf WebStorage\n\t\t     */\n\t\n\t\t  }, {\n\t\t    key: 'clear',\n\t\t    value: function clear() {\n\t\t      var _this2 = this;\n\t\n\t\t      executeInterceptors('clear');\n\t\t      Object.keys(this).forEach(function (key) {\n\t\t        delete _this2[key];\n\t\t      }, this);\n\t\t      _proxy[this.__storage__].clear();\n\t\t    }\n\t\t    /**\n\t\t     * Gets the number of data items stored in the Storage object.\n\t\t     *\n\t\t     * @readonly\n\t\t     *\n\t\t     * @memberOf WebStorage\n\t\t     */\n\t\n\t\t  }, {\n\t\t    key: 'length',\n\t\t    get: function get() {\n\t\t      return Object.keys(this).length;\n\t\t    }\n\t\t    /**\n\t\t     * Adds an interceptor to a WebStorage method\n\t\t     *\n\t\t     * @param  {string} command: name of the API method to intercept\n\t\t     * @param  {function} action: callback executed when the API method is called\n\t\t     * @return {void}\n\t\t     *\n\t\t     * @memberOf WebStorage\n\t\t     */\n\t\n\t\t  }], [{\n\t\t    key: 'interceptors',\n\t\t    value: function interceptors(command, action) {\n\t\t      if (command in _interceptors && typeof action === 'function') _interceptors[command].push(action);\n\t\t    }\n\t\t  }]);\n\t\n\t\t  return WebStorage;\n\t\t}();\n\t\n\t\t/**\n\t\t * @public\n\t\t *\n\t\t * Get/Set the storage mechanism to use by default.\n\t\t * @type {object}\n\t\t */\n\t\n\t\n\t\tvar configStorage = {\n\t\t  get: function get() {\n\t\t    return storage.__storage__;\n\t\t  },\n\t\n\t\n\t\t  /**\n\t\t   * Sets the storage mechanism to use by default.\n\t\t   * @param  {string} storageType: it can be \"localStorage\", \"sessionStorage\", \"cookieStorage\", or \"memoryStorage\"\n\t\t   * @return {void}\n\t\t   */\n\t\t  set: function set(storageType) {\n\t\t    if (!_proxy.hasOwnProperty(storageType)) {\n\t\t      throw new Error('Storage type \"' + storageType + '\" is not valid');\n\t\t    }\n\t\t    exports.default = storage = new WebStorage(storageType);\n\t\t  }\n\t\t};\n\t\n\t\t/**\n\t\t * @private\n\t\t *\n\t\t * Determines whether a value is a plain object\n\t\t *\n\t\t * @param  {any} value: the object to test\n\t\t * @return {boolean}\n\t\t */\n\t\tfunction isObject(value) {\n\t\t  return Object.prototype.toString.call(value) === '[object Object]';\n\t\t}\n\t\n\t\t/**\n\t\t * @private\n\t\t *\n\t\t * Allows add or subtract timestamps to the current date or to a specific date.\n\t\t * @param  {object} options: It contains the timestamps to add or remove to the date, and have the following properties:\n\t\t *         - {Date} date: if provided, the timestamps will affect this date, otherwise a new current date will be used.\n\t\t *         - {number} hours: hours to add/subtract\n\t\t *         - {number} days: days to add/subtract\n\t\t *         - {number} months: months to add/subtract\n\t\t *         - {number} years: years to add/subtract\n\t\t * @return {Date}\n\t\t */\n\t\tfunction setTimestamp() {\n\t\t  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\t\n\t\t  var opt = Object.assign({}, options);\n\t\t  var d = opt.date instanceof Date ? opt.date : new Date();\n\t\t  if (+opt.hours) d.setHours(d.getHours() + opt.hours);\n\t\t  if (+opt.days) d.setDate(d.getDate() + opt.days);\n\t\t  if (+opt.months) d.setMonth(d.getMonth() + opt.months);\n\t\t  if (+opt.years) d.setFullYear(d.getFullYear() + opt.years);\n\t\t  return d;\n\t\t}\n\t\n\t\t/**\n\t\t * @private\n\t\t *\n\t\t * Builds the expiration part for the cookie\n\t\t *\n\t\t * @param  {Date|object} date: the expiration date. See `setTimestamp(options)`\n\t\t * @return {string}\n\t\t */\n\t\tfunction buildExpirationString(date) {\n\t\t  var expires = date instanceof Date ? setTimestamp({ date: date }) : setTimestamp(date);\n\t\t  return '; expires=' + expires.toUTCString();\n\t\t}\n\t\n\t\t/**\n\t\t * @private\n\t\t *\n\t\t * Callback that finds an element in the array.\n\t\t * @param  {string} cookie: key=value\n\t\t * @return {boolean}\n\t\t */\n\t\tfunction findCookie(cookie) {\n\t\t  var nameEQ = this.toString();\n\t\t  // prevent leading spaces before the key\n\t\t  return cookie.trim().indexOf(nameEQ) === 0;\n\t\t}\n\t\n\t\t/**\n\t\t * @private\n\t\t *\n\t\t * Manages actions for creation/reading/deleting cookies.\n\t\t * Implements Web Storage interface methods.\n\t\t *\n\t\t * @return {object}\n\t\t */\n\t\tfunction cookieStorage() {\n\t\t  var api = {\n\t\t    setItem: function setItem(key, value, options) {\n\t\t      var expires = '',\n\t\t          cookie = void 0;\n\t\t      options = Object.assign({ path: '/' }, options);\n\t\t      if (isObject(options.expires) || options.expires instanceof Date) {\n\t\t        expires = buildExpirationString(options.expires);\n\t\t      }\n\t\t      cookie = key + '=' + encodeURIComponent(value) + expires + '; path=' + options.path;\n\t\t      $cookie.set(cookie);\n\t\t    },\n\t\t    getItem: function getItem(key) {\n\t\t      var value = void 0;\n\t\t      var nameEQ = key + '=';\n\t\t      var cookie = $cookie.get().split(';').find(findCookie, nameEQ);\n\t\t      if (cookie) {\n\t\t        // prevent leading spaces before the key name\n\t\t        value = cookie.trim().substring(nameEQ.length, cookie.length);\n\t\t        value = decodeURIComponent(value);\n\t\t      }\n\t\t      return value;\n\t\t    },\n\t\t    removeItem: function removeItem(key) {\n\t\t      api.setItem(key, '', { expires: { days: -1 } });\n\t\t    },\n\t\t    clear: function clear() {\n\t\t      var eq = '=';\n\t\t      var indexEQ = void 0,\n\t\t          key = void 0;\n\t\t      $cookie.get().split(';').forEach(function (cookie) {\n\t\t        indexEQ = cookie.indexOf(eq);\n\t\t        if (indexEQ > -1) {\n\t\t          key = cookie.substring(0, indexEQ);\n\t\t          // prevent leading spaces before the key\n\t\t          api.removeItem(key.trim());\n\t\t        }\n\t\t      });\n\t\t    },\n\t\t    initialize: function initialize() {\n\t\t      $cookie.get().split(';').forEach(function (cookie) {\n\t\t        var index = cookie.indexOf('=');\n\t\t        var key = cookie.substring(0, index).trim();\n\t\t        var value = cookie.substring(index + 1).trim();\n\t\t        if (key) api[key] = decodeURIComponent(value);\n\t\t      });\n\t\t    }\n\t\t  };\n\t\t  return api;\n\t\t}\n\t\n\t\t/**\n\t\t * @private\n\t\t *\n\t\t * Manages actions for creation/reading/deleting data in memory.\n\t\t * Implements Web Storage interface methods.\n\t\t * It also adds a hack to persist the store as a session in the current window.\n\t\t *\n\t\t * @return {object}\n\t\t */\n\t\tfunction memoryStorage() {\n\t\t  var hashtable = getStoreFromWindow();\n\t\t  var api = {\n\t\t    setItem: function setItem(key, value) {\n\t\t      hashtable[key] = value;\n\t\t      setStoreToWindow(hashtable);\n\t\t    },\n\t\t    getItem: function getItem(key) {\n\t\t      return hashtable[key];\n\t\t    },\n\t\t    removeItem: function removeItem(key) {\n\t\t      delete hashtable[key];\n\t\t      setStoreToWindow(hashtable);\n\t\t    },\n\t\t    clear: function clear() {\n\t\t      Object.keys(hashtable).forEach(function (key) {\n\t\t        return delete hashtable[key];\n\t\t      });\n\t\t      setStoreToWindow(hashtable);\n\t\t    },\n\t\t    initialize: function initialize() {\n\t\t      Object.assign(api, hashtable);\n\t\t    }\n\t\t  };\n\t\t  return api;\n\t\t}\n\t\n\t\t/**\n\t\t * @private\n\t\t *\n\t\t * Gets the hashtable-store from the current window.\n\t\t * @return {object}\n\t\t */\n\t\tfunction getStoreFromWindow() {\n\t\t  try {\n\t\t    var store = JSON.parse(window.self.name);\n\t\t    if (store && (typeof store === 'undefined' ? 'undefined' : _typeof(store)) === 'object') return store;\n\t\t  } catch (e) {\n\t\t    return {};\n\t\t  }\n\t\t}\n\t\n\t\t/**\n\t\t * @private\n\t\t *\n\t\t * Saves the hashtable-store in the current window.\n\t\t * @param  {object} hashtable: {key,value} pairs stored in memoryStorage\n\t\t * @return {void}\n\t\t */\n\t\tfunction setStoreToWindow(hashtable) {\n\t\t  var store = JSON.stringify(hashtable);\n\t\t  window.self.name = store;\n\t\t}\n\t\n\t\t/**\n\t\t * @private\n\t\t *\n\t\t * Checks whether a storage mechanism is available.\n\t\t * @param  {string} storageType: it can be \"localStorage\", \"sessionStorage\", \"cookieStorage\", or \"memoryStorage\"\n\t\t * @return {boolean}\n\t\t */\n\t\tfunction isStorageAvailable(storageType) {\n\t\t  var storageObj = _proxy[storageType];\n\t\t  var data = '__proxy-storage__';\n\t\t  try {\n\t\t    storageObj.setItem(data, data);\n\t\t    storageObj.removeItem(data);\n\t\t    return true;\n\t\t  } catch (e) {\n\t\t    return false;\n\t\t  }\n\t\t}\n\t\n\t\t/**\n\t\t * @private\n\t\t *\n\t\t * Sets the default storage mechanism available.\n\t\t * @param  {string} storageType: it can be \"localStorage\", \"sessionStorage\", \"cookieStorage\", or \"memoryStorage\"\n\t\t * @return {boolean}\n\t\t */\n\t\tfunction storageAvaliable(storageType) {\n\t\t  if (isAvaliable[storageType]) {\n\t\t    configStorage.set(storageType);\n\t\t  }\n\t\t  return isAvaliable[storageType];\n\t\t}\n\t\n\t\t/**\n\t\t * @private\n\t\t *\n\t\t * Initializes the module.\n\t\t * @return {void}\n\t\t */\n\t\tfunction init() {\n\t\t  isAvaliable.localStorage = isStorageAvailable('localStorage');\n\t\t  isAvaliable.sessionStorage = isStorageAvailable('sessionStorage');\n\t\t  isAvaliable.cookieStorage = isStorageAvailable('cookieStorage');\n\t\t  // sets the default storage mechanism available\n\t\t  Object.keys(isAvaliable).some(storageAvaliable);\n\t\t}\n\t\n\t\tinit();\n\t\n\t\t// @public API\n\t\texports.default = storage;\n\t\texports.WebStorage = WebStorage;\n\t\texports.configStorage = configStorage;\n\t\texports.isAvaliable = isAvaliable;\n\t\n\t/***/ }\n\t/******/ ])\n\t});\n\t;\n\n/***/ }\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// proxy-storage.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap fd1352cb29fe6678ee5b","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"proxyStorage\"] = factory();\n\telse\n\t\troot[\"proxyStorage\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\t/* eslint-disable no-use-before-define, no-invalid-this */\n\n\t/**\n\t * This library uses an adapter that implements the Web Storage interface,\n\t * which is very useful to deal with the lack of compatibility between\n\t * document.cookie and localStorage and sessionStorage.\n\t *\n\t * It also provides a memoryStorage fallback that stores the data in memory\n\t * when all of above mechanisms are not available.\n\t *\n\t * Author: David Rivera\n\t * Github: https://github.com/jherax\n\t * License: \"MIT\"\n\t *\n\t * You can fork this project on github:\n\t * https://github.com/jherax/proxy-storage.git\n\t */\n\n\t// If you want to support all ES6 features, uncomment the next line\n\t// import 'babel-polyfill';\n\n\t/**\n\t * @public\n\t *\n\t * Current storage mechanism.\n\t * @type {object}\n\t */\n\tvar storage = null;\n\n\t/**\n\t * @public\n\t *\n\t * Determines which storage mechanisms are available.\n\t *\n\t * @type {object}\n\t */\n\tvar isAvaliable = {\n\t  localStorage: false,\n\t  sessionStorage: false,\n\t  cookieStorage: false,\n\t  memoryStorage: true };\n\n\t/**\n\t * @private\n\t *\n\t * Proxy for the default cookie storage associated with the current document.\n\t *\n\t * @Reference\n\t * https://developer.mozilla.org/en-US/docs/Web/API/Document/cookie\n\t *\n\t * @type {object}\n\t */\n\tvar $cookie = {\n\t  get: function get() {\n\t    return document.cookie;\n\t  },\n\t  set: function set(value) {\n\t    document.cookie = value;\n\t  }\n\t};\n\n\t/**\n\t * @private\n\t *\n\t * Keeps WebStorage instances by type as singletons\n\t *\n\t * @type {object}\n\t */\n\tvar _instances = {};\n\n\t/**\n\t * @private\n\t *\n\t * Proxy for Web Storage and Cookies.\n\t * All members implement the Web Storage interface.\n\t *\n\t * @Reference\n\t * https://developer.mozilla.org/en-US/docs/Web/API/Storage\n\t *\n\t * @type {object}\n\t */\n\tvar _proxy = {\n\t  localStorage: window.localStorage,\n\t  sessionStorage: window.sessionStorage,\n\t  cookieStorage: initApi(cookieStorage()),\n\t  memoryStorage: initApi(memoryStorage())\n\t};\n\n\t/**\n\t * @private\n\t *\n\t * Adds the current elements in the storage object\n\t *\n\t * @param  {object} api: the API to initialize\n\t * @return {object}\n\t */\n\tfunction initApi(api) {\n\t  // sets read-only and non-enumerable properties\n\t  for (var prop in api) {\n\t    // eslint-disable-line\n\t    if (prop !== 'initialize') setProperty(api, prop);\n\t  }\n\t  api.initialize();\n\t  // this method is removed after being invoked\n\t  // because is not part of the Web Storage interface\n\t  delete api.initialize;\n\t  return api;\n\t}\n\n\t/**\n\t * @private\n\t *\n\t * Creates a non-enumerable read-only property.\n\t *\n\t * @param  {object} obj: the object to add the property\n\t * @param  {string} name: the name of the property\n\t * @param  {any} value: the value of the property\n\t * @return {void}\n\t */\n\tfunction setProperty(obj, name, value) {\n\t  var descriptor = {\n\t    configurable: false,\n\t    enumerable: false,\n\t    writable: false\n\t  };\n\t  if (typeof value !== 'undefined') {\n\t    descriptor.value = value;\n\t  }\n\t  Object.defineProperty(obj, name, descriptor);\n\t}\n\n\t/**\n\t * @private\n\t *\n\t * Stores the interceptors for WebStorage methods\n\t *\n\t * @type {object}\n\t */\n\tvar _interceptors = {\n\t  setItem: [],\n\t  getItem: [],\n\t  removeItem: [],\n\t  clear: []\n\t};\n\n\t/**\n\t * @private\n\t *\n\t * Executes the interceptors of a WebStorage method\n\t *\n\t * @param  {string} command: name of the method to intercept\n\t * @return {void}\n\t */\n\tfunction executeInterceptors(command) {\n\t  for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n\t    args[_key - 1] = arguments[_key];\n\t  }\n\n\t  _interceptors[command].forEach(function (action) {\n\t    return action.apply(undefined, args);\n\t  });\n\t}\n\n\t/**\n\t * @private\n\t *\n\t * Validates if the key is not empty.\n\t * (null, undefined or empty string)\n\t * @param  {string} key: keyname of the storage\n\t * @return {void}\n\t */\n\tfunction checkEmpty(key) {\n\t  if (key == null || key === '') {\n\t    throw new Error('The key provided can not be empty');\n\t  }\n\t}\n\n\t/**\n\t * @public\n\t *\n\t * Implementation of the Web Storage interface.\n\t * It saves and retrieves values as JSON.\n\t *\n\t * @Reference\n\t * https://developer.mozilla.org/en-US/docs/Web/API/Storage\n\t *\n\t * @type {class}\n\t */\n\n\tvar WebStorage = function () {\n\t  /**\n\t   * Creates an instance of WebStorage.\n\t   *\n\t   * @param {string} storageType: it can be \"localStorage\", \"sessionStorage\", \"cookieStorage\", or \"memoryStorage\"\n\t   *\n\t   * @memberOf WebStorage\n\t   */\n\t  function WebStorage(storageType) {\n\t    var _this = this;\n\n\t    _classCallCheck(this, WebStorage);\n\n\t    if (!_proxy.hasOwnProperty(storageType)) {\n\t      throw new Error('Storage type \"' + storageType + '\" is not valid');\n\t    }\n\t    // keeps instances by storageType as singletons\n\t    if (_instances[storageType]) {\n\t      return _instances[storageType];\n\t    }\n\t    setProperty(this, '__storage__', storageType);\n\t    // copies all existing elements in the storage\n\t    Object.keys(_proxy[storageType]).forEach(function (key) {\n\t      var value = _proxy[storageType][key];\n\t      try {\n\t        _this[key] = JSON.parse(value);\n\t      } catch (e) {\n\t        _this[key] = value;\n\t      }\n\t    }, this);\n\t    _instances[storageType] = this;\n\t  }\n\t  /**\n\t   * Stores a value given a key name.\n\t   *\n\t   * @param  {string} key: keyname of the storage\n\t   * @param  {any} value: data to save in the storage\n\t   * @param  {object} options: additional options for cookieStorage\n\t   * @return {void}\n\t   *\n\t   * @memberOf WebStorage\n\t   */\n\n\n\t  _createClass(WebStorage, [{\n\t    key: 'setItem',\n\t    value: function setItem(key, value, options) {\n\t      checkEmpty(key);\n\t      this[key] = value;\n\t      executeInterceptors('setItem', key, value, options);\n\t      value = JSON.stringify(value);\n\t      _proxy[this.__storage__].setItem(key, value, options);\n\t    }\n\t    /**\n\t     * Retrieves a value by its key name.\n\t     *\n\t     * @param  {string} key: keyname of the storage\n\t     * @return {void}\n\t     *\n\t     * @memberOf WebStorage\n\t     */\n\n\t  }, {\n\t    key: 'getItem',\n\t    value: function getItem(key) {\n\t      checkEmpty(key);\n\t      executeInterceptors('getItem', key);\n\t      var value = _proxy[this.__storage__].getItem(key);\n\t      return JSON.parse(value);\n\t    }\n\t    /**\n\t     * Deletes a key from the storage.\n\t     *\n\t     * @param  {string} key: keyname of the storage\n\t     * @return {void}\n\t     *\n\t     * @memberOf WebStorage\n\t     */\n\n\t  }, {\n\t    key: 'removeItem',\n\t    value: function removeItem(key) {\n\t      checkEmpty(key);\n\t      delete this[key];\n\t      executeInterceptors('removeItem', key);\n\t      _proxy[this.__storage__].removeItem(key);\n\t    }\n\t    /**\n\t     * Removes all keys from the storage.\n\t     *\n\t     * @return {void}\n\t     *\n\t     * @memberOf WebStorage\n\t     */\n\n\t  }, {\n\t    key: 'clear',\n\t    value: function clear() {\n\t      var _this2 = this;\n\n\t      executeInterceptors('clear');\n\t      Object.keys(this).forEach(function (key) {\n\t        delete _this2[key];\n\t      }, this);\n\t      _proxy[this.__storage__].clear();\n\t    }\n\t    /**\n\t     * Gets the number of data items stored in the Storage object.\n\t     *\n\t     * @readonly\n\t     *\n\t     * @memberOf WebStorage\n\t     */\n\n\t  }, {\n\t    key: 'length',\n\t    get: function get() {\n\t      return Object.keys(this).length;\n\t    }\n\t    /**\n\t     * Adds an interceptor to a WebStorage method\n\t     *\n\t     * @param  {string} command: name of the API method to intercept\n\t     * @param  {function} action: callback executed when the API method is called\n\t     * @return {void}\n\t     *\n\t     * @memberOf WebStorage\n\t     */\n\n\t  }], [{\n\t    key: 'interceptors',\n\t    value: function interceptors(command, action) {\n\t      if (command in _interceptors && typeof action === 'function') _interceptors[command].push(action);\n\t    }\n\t  }]);\n\n\t  return WebStorage;\n\t}();\n\n\t/**\n\t * @public\n\t *\n\t * Get/Set the storage mechanism to use by default.\n\t * @type {object}\n\t */\n\n\n\tvar configStorage = {\n\t  get: function get() {\n\t    return storage.__storage__;\n\t  },\n\n\n\t  /**\n\t   * Sets the storage mechanism to use by default.\n\t   * @param  {string} storageType: it can be \"localStorage\", \"sessionStorage\", \"cookieStorage\", or \"memoryStorage\"\n\t   * @return {void}\n\t   */\n\t  set: function set(storageType) {\n\t    if (!_proxy.hasOwnProperty(storageType)) {\n\t      throw new Error('Storage type \"' + storageType + '\" is not valid');\n\t    }\n\t    exports.default = storage = new WebStorage(storageType);\n\t  }\n\t};\n\n\t/**\n\t * @private\n\t *\n\t * Determines whether a value is a plain object\n\t *\n\t * @param  {any} value: the object to test\n\t * @return {boolean}\n\t */\n\tfunction isObject(value) {\n\t  return Object.prototype.toString.call(value) === '[object Object]';\n\t}\n\n\t/**\n\t * @private\n\t *\n\t * Allows add or subtract timestamps to the current date or to a specific date.\n\t * @param  {object} options: It contains the timestamps to add or remove to the date, and have the following properties:\n\t *         - {Date} date: if provided, the timestamps will affect this date, otherwise a new current date will be used.\n\t *         - {number} hours: hours to add/subtract\n\t *         - {number} days: days to add/subtract\n\t *         - {number} months: months to add/subtract\n\t *         - {number} years: years to add/subtract\n\t * @return {Date}\n\t */\n\tfunction setTimestamp() {\n\t  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n\t  var opt = Object.assign({}, options);\n\t  var d = opt.date instanceof Date ? opt.date : new Date();\n\t  if (+opt.hours) d.setHours(d.getHours() + opt.hours);\n\t  if (+opt.days) d.setDate(d.getDate() + opt.days);\n\t  if (+opt.months) d.setMonth(d.getMonth() + opt.months);\n\t  if (+opt.years) d.setFullYear(d.getFullYear() + opt.years);\n\t  return d;\n\t}\n\n\t/**\n\t * @private\n\t *\n\t * Builds the expiration part for the cookie\n\t *\n\t * @param  {Date|object} date: the expiration date. See `setTimestamp(options)`\n\t * @return {string}\n\t */\n\tfunction buildExpirationString(date) {\n\t  var expires = date instanceof Date ? setTimestamp({ date: date }) : setTimestamp(date);\n\t  return '; expires=' + expires.toUTCString();\n\t}\n\n\t/**\n\t * @private\n\t *\n\t * Callback that finds an element in the array.\n\t * @param  {string} cookie: key=value\n\t * @return {boolean}\n\t */\n\tfunction findCookie(cookie) {\n\t  var nameEQ = this.toString();\n\t  // prevent leading spaces before the key\n\t  return cookie.trim().indexOf(nameEQ) === 0;\n\t}\n\n\t/**\n\t * @private\n\t *\n\t * Manages actions for creation/reading/deleting cookies.\n\t * Implements Web Storage interface methods.\n\t *\n\t * @return {object}\n\t */\n\tfunction cookieStorage() {\n\t  var api = {\n\t    setItem: function setItem(key, value, options) {\n\t      var expires = '',\n\t          cookie = void 0;\n\t      options = Object.assign({ path: '/' }, options);\n\t      if (isObject(options.expires) || options.expires instanceof Date) {\n\t        expires = buildExpirationString(options.expires);\n\t      }\n\t      cookie = key + '=' + encodeURIComponent(value) + expires + '; path=' + options.path;\n\t      $cookie.set(cookie);\n\t    },\n\t    getItem: function getItem(key) {\n\t      var value = void 0;\n\t      var nameEQ = key + '=';\n\t      var cookie = $cookie.get().split(';').find(findCookie, nameEQ);\n\t      if (cookie) {\n\t        // prevent leading spaces before the key name\n\t        value = cookie.trim().substring(nameEQ.length, cookie.length);\n\t        value = decodeURIComponent(value);\n\t      }\n\t      return value;\n\t    },\n\t    removeItem: function removeItem(key) {\n\t      api.setItem(key, '', { expires: { days: -1 } });\n\t    },\n\t    clear: function clear() {\n\t      var eq = '=';\n\t      var indexEQ = void 0,\n\t          key = void 0;\n\t      $cookie.get().split(';').forEach(function (cookie) {\n\t        indexEQ = cookie.indexOf(eq);\n\t        if (indexEQ > -1) {\n\t          key = cookie.substring(0, indexEQ);\n\t          // prevent leading spaces before the key\n\t          api.removeItem(key.trim());\n\t        }\n\t      });\n\t    },\n\t    initialize: function initialize() {\n\t      $cookie.get().split(';').forEach(function (cookie) {\n\t        var index = cookie.indexOf('=');\n\t        var key = cookie.substring(0, index).trim();\n\t        var value = cookie.substring(index + 1).trim();\n\t        if (key) api[key] = decodeURIComponent(value);\n\t      });\n\t    }\n\t  };\n\t  return api;\n\t}\n\n\t/**\n\t * @private\n\t *\n\t * Manages actions for creation/reading/deleting data in memory.\n\t * Implements Web Storage interface methods.\n\t * It also adds a hack to persist the store as a session in the current window.\n\t *\n\t * @return {object}\n\t */\n\tfunction memoryStorage() {\n\t  var hashtable = getStoreFromWindow();\n\t  var api = {\n\t    setItem: function setItem(key, value) {\n\t      hashtable[key] = value;\n\t      setStoreToWindow(hashtable);\n\t    },\n\t    getItem: function getItem(key) {\n\t      return hashtable[key];\n\t    },\n\t    removeItem: function removeItem(key) {\n\t      delete hashtable[key];\n\t      setStoreToWindow(hashtable);\n\t    },\n\t    clear: function clear() {\n\t      Object.keys(hashtable).forEach(function (key) {\n\t        return delete hashtable[key];\n\t      });\n\t      setStoreToWindow(hashtable);\n\t    },\n\t    initialize: function initialize() {\n\t      Object.assign(api, hashtable);\n\t    }\n\t  };\n\t  return api;\n\t}\n\n\t/**\n\t * @private\n\t *\n\t * Gets the hashtable-store from the current window.\n\t * @return {object}\n\t */\n\tfunction getStoreFromWindow() {\n\t  try {\n\t    var store = JSON.parse(window.self.name);\n\t    if (store && (typeof store === 'undefined' ? 'undefined' : _typeof(store)) === 'object') return store;\n\t  } catch (e) {\n\t    return {};\n\t  }\n\t}\n\n\t/**\n\t * @private\n\t *\n\t * Saves the hashtable-store in the current window.\n\t * @param  {object} hashtable: {key,value} pairs stored in memoryStorage\n\t * @return {void}\n\t */\n\tfunction setStoreToWindow(hashtable) {\n\t  var store = JSON.stringify(hashtable);\n\t  window.self.name = store;\n\t}\n\n\t/**\n\t * @private\n\t *\n\t * Checks whether a storage mechanism is available.\n\t * @param  {string} storageType: it can be \"localStorage\", \"sessionStorage\", \"cookieStorage\", or \"memoryStorage\"\n\t * @return {boolean}\n\t */\n\tfunction isStorageAvailable(storageType) {\n\t  var storageObj = _proxy[storageType];\n\t  var data = '__proxy-storage__';\n\t  try {\n\t    storageObj.setItem(data, data);\n\t    storageObj.removeItem(data);\n\t    return true;\n\t  } catch (e) {\n\t    return false;\n\t  }\n\t}\n\n\t/**\n\t * @private\n\t *\n\t * Sets the default storage mechanism available.\n\t * @param  {string} storageType: it can be \"localStorage\", \"sessionStorage\", \"cookieStorage\", or \"memoryStorage\"\n\t * @return {boolean}\n\t */\n\tfunction storageAvaliable(storageType) {\n\t  if (isAvaliable[storageType]) {\n\t    configStorage.set(storageType);\n\t  }\n\t  return isAvaliable[storageType];\n\t}\n\n\t/**\n\t * @private\n\t *\n\t * Initializes the module.\n\t * @return {void}\n\t */\n\tfunction init() {\n\t  isAvaliable.localStorage = isStorageAvailable('localStorage');\n\t  isAvaliable.sessionStorage = isStorageAvailable('sessionStorage');\n\t  isAvaliable.cookieStorage = isStorageAvailable('cookieStorage');\n\t  // sets the default storage mechanism available\n\t  Object.keys(isAvaliable).some(storageAvaliable);\n\t}\n\n\tinit();\n\n\t// @public API\n\texports.default = storage;\n\texports.WebStorage = WebStorage;\n\texports.configStorage = configStorage;\n\texports.isAvaliable = isAvaliable;\n\n/***/ }\n/******/ ])\n});\n;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./dist/proxy-storage.js\n// module id = 0\n// module chunks = 0"],"sourceRoot":""}